


/* Wenn eine neue Haltung angelegt wurde */
CREATE TRIGGER TRIG_HALTUNG_BEFORE_INSERT
FOR HALTUNG BEFORE INSERT AS
  DECLARE VARIABLE nIDHaltung INTEGER;
  DECLARE VARIABLE dtOld      DATE;
  DECLARE VARIABLE dAblHoehe  DECIMAL (15, 3);
  DECLARE VARIABLE dLange     DECIMAL (15, 3);
BEGIN
 /* Datum der letzten Spülung in Haltungen anpassen */

  dLange = 0.0;

END !!


CREATE TRIGGER TRIG_HALTUNG_AFTER_UPDATE
FOR HALTUNG AFTER UPDATE AS
  DECLARE VARIABLE nIDHaltung INTEGER;
  DECLARE VARIABLE dGKRZul  DECIMAL (15, 3);
  DECLARE VARIABLE dGKHZul  DECIMAL (15, 3);
  DECLARE VARIABLE dGKRAbl  DECIMAL (15, 3);
  DECLARE VARIABLE dGKHAbl  DECIMAL (15, 3);
  DECLARE VARIABLE dLange     DECIMAL (15, 3);
BEGIN
 /* Wenn Zu oder Ablauf geändert wurde, dann Länge neu berechnen */


    IF ((OLD.IDZUL <> NEW.IDZUL) OR  (OLD.IDABL <> NEW.IDABL)) THEN BEGIN
    
      /* Länge der Haltung zwische Zu und Ablauf bestimmen */
      SELECT DISTINCT GKR     FROM ABLAUF   WHERE ABLAUF.ID = NEW.IDABL INTO dGKRAbl; 
      SELECT DISTINCT GKH     FROM ABLAUF   WHERE ABLAUF.ID = NEW.IDABL INTO dGKHAbl;  
      SELECT DISTINCT GKR     FROM ZULAUF   WHERE ZULAUF.ID = NEW.IDZUL INTO dGKRZul; 
      SELECT DISTINCT GKH     FROM ZULAUF   WHERE ZULAUF.ID = NEW.IDZUL INTO dGKHZul; 
      EXECUTE PROCEDURE PROC_CALC_HALTLANGE :dGKRZul, :dGKHZul, :dGKRAbl, :dGKHAbl, NEW.ID, 1;   /* Länge Haltung */
    end
/*    if (NEW.Markierung = Old.Markierung) then begin */
/*      UPDATE HALTUNG SET HALTUNG.MARKIERUNG = "Editiert" WHERE HALTUNG.ID = NEW.ID; */
/*      UPDATE HALTUNG SET HALTUNG.MARKIERUNG = cast(:dLange as VARCHAR(25)) WHERE HALTUNG.ID = NEW.IDHALTUNG; */
/*    end */
END !!


