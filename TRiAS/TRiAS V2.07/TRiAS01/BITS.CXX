/* Bitmanipulationsbefehle fuer ein 32 Bit-Wort                 */
/* File: BITS.C                 last update: 5. Oktober 1989    */

#include "trias01p.hxx"

#ifdef _DEBUG
#undef THIS_FILE
static char BASED_CODE THIS_FILE[] = __FILE__;
#endif

static __int64 __bit[] = {
	0x0000000000000001ui64, 0x0000000000000002ui64, 0x0000000000000004ui64, 0x0000000000000008ui64,
    0x0000000000000010ui64, 0x0000000000000020ui64, 0x0000000000000040ui64, 0x0000000000000080ui64,
    0x0000000000000100ui64, 0x0000000000000200ui64, 0x0000000000000400ui64, 0x0000000000000800ui64,
    0x0000000000001000ui64, 0x0000000000002000ui64, 0x0000000000004000ui64, 0x0000000000008000ui64,
    0x0000000000010000ui64, 0x0000000000020000ui64, 0x0000000000040000ui64, 0x0000000000080000ui64, 
    0x0000000000100000ui64, 0x0000000000200000ui64, 0x0000000000400000ui64, 0x0000000000800000ui64,
    0x0000000001000000ui64, 0x0000000002000000ui64, 0x0000000004000000ui64, 0x0000000008000000ui64, 
    0x0000000010000000ui64, 0x0000000020000000ui64, 0x0000000040000000ui64, 0x0000000080000000ui64,
	0x0000000100000000ui64, 0x0000000200000000ui64, 0x0000000400000000ui64, 0x0000000800000000ui64,
    0x0000001000000000ui64, 0x0000002000000000ui64, 0x0000004000000000ui64, 0x0000008000000000ui64,
    0x0000010000000000ui64, 0x0000020000000000ui64, 0x0000040000000000ui64, 0x0000080000000000ui64,
    0x0000100000000000ui64, 0x0000200000000000ui64, 0x0000400000000000ui64, 0x0000800000000000ui64,
    0x0001000000000000ui64, 0x0002000000000000ui64, 0x0004000000000000ui64, 0x0008000000000000ui64, 
    0x0010000000000000ui64, 0x0020000000000000ui64, 0x0040000000000000ui64, 0x0080000000000000ui64,
    0x0100000000000000ui64, 0x0200000000000000ui64, 0x0400000000000000ui64, 0x0800000000000000ui64, 
    0x1000000000000000ui64, 0x2000000000000000ui64, 0x4000000000000000ui64, 0x8000000000000000ui64,
};

extern "C" BOOL FUNCTYPE EXPORT01 bit (unsigned __int64 x, short bitnr)
{
	TX_ASSERT(0 <= bitnr && bitnr < 64);		// assumes __int64 has 64 Bits
	return ((x & __bit[bitnr]) ? TRUE : FALSE);
}

extern "C" unsigned __int64 FUNCTYPE EXPORT01 bis (unsigned __int64 x, short bitnr)
{
	TX_ASSERT(0 <= bitnr && bitnr < 64);		// assumes __int64 has 64 Bits
	return (x | __bit[bitnr]);
}


extern "C" short FUNCTYPE EXPORT01 bitcnt (unsigned __int64 x)
{
register int i;
register int cnt = 0;
	
	for (i = 0; i < 64; ++i) 			// assumes __int64 has 64 Bits
	{
		if (x & __bit[i]) ++cnt;
	}	
	return cnt;
}

