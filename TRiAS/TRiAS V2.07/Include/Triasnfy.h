/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: TriasVBX */

#ifndef _TriasVBX_H_
#define _TriasVBX_H_

DEFINE_GUID(LIBID_TriasVBX,0x89C5F582,0x4E2B,0x101B,0xAA,0xE1,0xE7,0xE7,0xE7,0xE7,0xE7,0xE7);

typedef enum tagSERVEREVT {
    SERVEREVT_ClosingServer = 0,
    SERVEREVT_ServerClosed = 1,
	SERVEREVT_InitializedServer = 2,
	SERVEREVT_ExtensionsLoaded = 3,
	SERVEREVT_ShowToolTips = 4,
	SERVEREVT_ShowNoMoreToolTips = 5,
} SERVEREVT;

typedef enum tagPROJECTEVT {
    PROJECTEVT_ProjectOpened = 10,
    PROJECTEVT_ClosingProject = 11,
    PROJECTEVT_ProjectClosed = 12,
	PROJECTEVT_ProjectIsDirty = 13,
	PROJECTEVT_ProjectIsNotDirty = 14,
	PROJECTEVT_ProjectToClose = 15,
	PROJECTEVT_ChangedCoordFormat = 16,
	PROJECTEVT_ReReadHeader = 17,
} PROJECTEVT;

typedef enum tagGEOVIEWEVT {
    GEOVIEWEVT_SelectingView = 20,
    GEOVIEWEVT_ViewSelected = 21,
    GEOVIEWEVT_DeletingView = 22,
    GEOVIEWEVT_ViewDeleted = 23,
	GEOVIEWEVT_ViewCreated = 24,
//	GEOVIEWEVT_ChangingZoom = 25,
	GEOVIEWEVT_ZoomChanged = 26,
	GEOVIEWEVT_PaintingView = 27,
	GEOVIEWEVT_ViewPainted = 28,
} GEOVIEWEVT;

typedef enum tagGEOCLASSEVT {
    GEOCLASSEVT_DrawingClass = 30,
    GEOCLASSEVT_ClassChanged = 31,
    GEOCLASSEVT_ClassesChanged = 32,
    GEOCLASSEVT_DeletingClass = 33,
    GEOCLASSEVT_ClassDeleted = 34
} GEOCLASSEVT;

typedef enum tagGEOOBJECTEVT {
    GEOOBJECTEVT_DrawingObject = 40,
    GEOOBJECTEVT_InquiringObject = 41,
    GEOOBJECTEVT_ObjectSelected = 42,
    GEOOBJECTEVT_ObjectUnSelected = 43,
    GEOOBJECTEVT_DeletingObject = 44,
    GEOOBJECTEVT_ObjectDeleted = 45
} GEOOBJECTEVT;

typedef enum tagTOOLBOXEVT {
    TOOLBOXEVT_ToolAdded = 50,
    TOOLBOXEVT_ToolRemoved = 51,
    TOOLBOXEVT_ToolSelected = 52
} TOOLBOXEVT;

typedef enum tagGEOFEATUREEVT {
    GEOFEATUREEVT_FeatureChanged = 60,
    GEOFEATUREEVT_FeaturesChanged = 61
} GEOFEATUREEVT;

typedef enum tagGEORELATIONEVT {
    GEORELATIONEVT_RelationChanged = 70,
    GEORELATIONEVT_RelationsChanged = 71
} GEORELATIONEVT;

typedef enum tagOBJWNDEVT {
    OBJWNDEVT_WindowCreated = 80,
    OBJWNDEVT_GotFocus = 81,
    OBJWNDEVT_LostFocus = 82,
    OBJWNDEVT_WindowDestroyed = 83
} OBJWNDEVT;

DEFINE_GUID(IID__IAdviseSink,0x89C5F580,0x4E2B,0x101B,0xAA,0xE1,0xE7,0xE7,0xE7,0xE7,0xE7,0xE7);

/* Definition of interface: _IAdviseSink */
DECLARE_INTERFACE_(_IAdviseSink, IUnknown)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* _IAdviseSink methods */
    STDMETHOD_(VARIANT, ServerEvent)(THIS_ VARIANT vEvtType) PURE;
    STDMETHOD_(VARIANT, ProjectEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, ViewEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, GeoClassEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, GeoObjectEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, ToolboxEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, ObjectWindowEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, MenuCommandEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, MenuInitEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
    STDMETHOD_(VARIANT, MenuSelectEvent)(THIS_ VARIANT vEvtType, VARIANT vEvtParam) PURE;
};

DEFINE_GUID(DIID__DAdviseSink,0x89C5F581,0x4E2B,0x101B,0xAA,0xE1,0xE7,0xE7,0xE7,0xE7,0xE7,0xE7);

/* Definition of dispatch interface: _DAdviseSink */
DECLARE_INTERFACE_(_DAdviseSink, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

/* Capable of dispatching all the methods of interface _IAdviseSink */
};

#endif
