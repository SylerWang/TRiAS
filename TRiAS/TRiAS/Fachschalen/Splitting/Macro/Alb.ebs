'**************************************************************************
'*                                                                        *
'*  ALB-Abgleich Projekt Berlin                                           *
'*                                                                        *
'**************************************************************************
' Recherchiert Daten in MDB-Tabelle
'======================================================================================
Option Explicit


Const strFlur = "Flurstück"
'Const strStrasse = "Straße"
Const strStrasse = "Flurstück in Verkehrswegen"

'Programmkonstanten
Const NL = Chr$(13) + Chr$(10)		'NewLine
Const HT = Chr$(9)	   		' Tab		 

'=========Attribute TRiAS=======================
'Const strDBCode = "DatenbankCode   "
Const strDBCode = "DatenbankCode"

' Fehlerkennzeichen
Const strFKZ = "fehlendes FS-Kennzeichen"
Const strFAA = "fehlende ALB-Anbindung"		

Const strFIG = "Flurstück/identische Geometrie"
Const strFGG = "Flurstück/getrennte Geometrie"
Const strFSS = "fehlender Straßenschlüssel/ALB"	

Const strFDUP = "Flurstück/mehrfache Grundstückzuordnung"

' Objektattribute
'Const strKZ = "Kennungszeichen"
Const strKZ = "ALK-Flurstückskennzeichen"
Const strUIN = "Ursprungs-Identifikationsnummer"
Const strSN = "Straßenname"
Const strGN = "Grundstücksnummer"

' ALB - Attribute

'Tabellen
Const strTabG = "ALB_Grundstuecke"
Const strTabS = "ALB_FS_Strassen"
Const strTabF = "FS_Fehler"

Const strTabA = "Datenbanknummern"


' Felder
Const strSFSK = "Flurstueckskennzeichen"
Const strSSN = "StrName"
Const strGGN = "Grundstuecksnummer"
Const strGID = "Identifikator"
Const strFFE = "FS_Fehler"
Const strFfalsch = "FS_falsch"
Const strFNOALB = "FS_ALB_fehlt"
Const strFALBfalsch = "FS_falsch_ALB_fehlt"
Const strFALBrichtig = "FS_richtig_ALB_fehlt"
Const strFDopId = "FS_doppelt_ID_identisch"
Const strFDopVer = "FS_doppelt_ID_verschieden"
Const strFStrfehlt = "FS_ALB_Strasse_fehlt"

Const strDB = "Datenbank_AA"
Const strTR = "TRiAS_DB_Name"

Const strSelectFromORWnd As String = "TRiASEx.SelectFromObjectWindow.1"
Const strNoShow As String = "NoShow=1"
Const strQuShow As String = "NoShow=1;DataSource="

Const strToolSearchLong As String = "Speichern von ALB-Daten über Flurstücknummer"

'=====================================================================================
Private Wins As GeoObjectWins

Private docGD As GeoDocument		'Projekt
Private wsp As Workspace

Private dbs As Database			'MDB - Datenbank
Private rstPG As Recordset		'Recordset-Objekt 

'======================================================================================

Private strDatenPfad As String
Private strDatenFile As String

'===========================================================================
Private clsFlur As GeoClass		'Objektklasse (Flurstück)
Private objsFlur As GeoObjects		'GeometrieObjekte (Flurstück)
Private clsStr As GeoClass		'Objektklasse (Straße (allg.)
Private objsStr As GeoObjects		'GeometrieObjekte (Straße (allg.)

Private bErrFile As Boolean			' Fehlerdatei angelegt (True)

Private bError As Boolean			' Fehler (True)

'======================================================================================

' MDB-Datei
'Tabelle ALB_FS_STRASSEN
Private fldMDBFstKzS As Field
Private fldMDBStrName As Field

' Tabelle ALB_Grundstuecke
Private fldMDBFstKzG As Field
Private fldMDBGstNr As Field
Private fldMDBId As Field

'Tabelle FS_Fehler
Private fldMDBFeFalsch As Field
Private fldMDBFeALB As Field
Private fldMDBFeALBfalsch As Field
Private fldMDBFeALBrichtig As Field
Private fldMDBFeIdDoppelt As Field
Private fldMDBFeIdVersch As Field
Private fldMDBFeStr As Field

Private fldMDBDBA As Field
'=================================================================

Private Feat As GeoFeature
Private VFeat As GeoFeature
'==================================================================
Private MyQuelle As String
'==================================================================

'Titel der Message-Boxen
Const strBoxTitel = "TRiAS®  -  ALB/Flurstücksbearbeitung"

'====================================================================
Declare Private Sub ErrFile (strErrText As String)
Declare Private Sub ALB_Grundstueck (Obj As GeoObject,Key As String)
Declare Private Sub ALB_FehlerCode (Obj As GeoObject,Key As Integer)
Declare Private Sub ALB_Strasse (Obj As GeoObject,Key As String)
Declare Private Function HeaderEintrag ( Key As String) As Boolean
Declare Private Sub AbbruchBeiFehler (lngFehlerNr As Long)

'====================================================================
'Hauptprogramm

Sub ALB(strQuelle As String)

'Pfade für BasicScript und Daten

  
	On Error GoTo CheckError0

	Set docGD = GetActiveDocument()			'Zugriff auf aktuelles Projekt

' Nach OR-Fenster suchen

	Dim fORWnd As Boolean
	fORWnd = True

	Set Wins = docGD.GetGeoObjectWins()
	If (Wins Is Nothing) Then
		fORWnd = False
	ElseIf (Wins.Count = 0) Then
		fORWnd = False
	End If


	Dim MDBase As String
	Dim HDBase As String
	Dim e As String


'   Code in DB-Header
	Dim DBName As String
	DBName = LCase$(docGD.Name$)

' DB-Code
'	e = "Datenbankcode.mdb:*.mdb"

'	HDBase = OpenFilename$ ("     Öffnen *.mdb für Header",e$)
'	If HDBase = "" Then
'		Exit Sub
'	End If

' Daten
	e = "ALB-Daten.mdb:*.mdb"

	MDBase = OpenFilename$ ("     Öffnen *.mdb(ZDAT) für Bearbeitungsgebiet",e$)
	If MDBase = "" Then
		Exit Sub
	End If
 	

'Geduldsanzeige starten
	Msg.Open NL+"  Die Verarbeitung wird vorbereitet ... bitte warten!  "+NL,,False,False


'weitere Variablen initialisieren

'//////////////////////////////////////////////////////////////////////////////

'	MDB - Datenbank

	Set wsp = DBEngine.Workspaces(0)


'	msgbox MDBase$

	Msg.Close


'	Set dbs = wsp.OpenDataBase(HDBase$)
'	If dbs Is Nothing Then
'		MsgBox " Datei "+HDBase$+" nicht offen!",ebCritical,strBoxTitel
'		Exit Sub
'	End If

'	Msg.Close

	MyQuelle = strQuelle

'	HeaderEintrag DBName
'	If HeaderEintrag (strQuelle) = False Then
'		Exit Sub
'	End If

	Set dbs = Nothing

	Set dbs = wsp.OpenDataBase(MDBase$)
	If dbs Is Nothing Then
		MsgBox " Datei "+MDBase$+" nicht offen!",ebCritical,strBoxTitel
		Exit Sub
	End If


	If strQuelle = "" Then
		Set clsFlur = docGD.GetClass (strFlur)
		Set clsStr = docGD.GetClass (strStrasse)
	Else
		Set clsFlur = docGD.GetClass (strFlur,strQuelle)
		Set clsStr = docGD.GetClass (strStrasse,strQuelle)
	End If

	If (clsFlur Is Nothing) Then
		MsgBox "Im Projekt wurden keine Flurstücke gefunden!", _
				ebInformation, strBoxTitel
		Exit Sub
	End If


'  Mit OR-Fenster Einzelaktionen ____________________________________________
	Set objsStr = Nothing
	Set objsFlur = Nothing

' Operation durchführen
Dim Seq As New PropertySequence


	Dim MyShow As String
	If strQuelle = "" Then
		MyShow = strNoShow
	Else
		MyShow = strQuShow + strQuelle
	End If

	Seq.Description = strToolSearchLong

	If (fORWnd = True) Then
		Seq.AddAction strSelectFromORWnd, strNoShow
		Set objsFlur = Seq.DoActions()
	Else

' ----------------------------------------------------------------------------
		Set objsFlur = clsFlur.GetObjects (OT_Area)
		If (objsFlur Is Nothing Or objsFlur.Count = 0 ) Then
			MsgBox "Im Projekt wurden keine flächenförmigen Flurstücke gefunden!", _
					ebInformation, strBoxTitel
			Beep
			MsgBox "Und tschüß!", ebInformation, strBoxTitel
			Exit Sub
		End If

		If (clsStr Is Nothing) Then
			MsgBox "Das Projekt enthält keine allgemeinen Straßen", ebQuestion, strBoxTitel
		Else
			Set objsStr = clsStr.GetObjects (OT_Area)
			If objsStr.Count = 0 Then
				MsgBox "Das Projekt enthält keine flächenmäßigen allgemeinen Straßen", _
						ebQuestion, strBoxTitel
			End If
		End If
	End If

	Dim Obj As GeoObject

	Dim SelObjS As Long
	SelObjS = objsFlur.Count

	bErrFile = False	' Fehlerdatei (noch) nicht angelegt


' StatusAnzeige erzeugen und initialisieren
	Dim Status As New StatusIndicator 

	If (Status Is Not Nothing) Then
		Status.Restart 0, SelObjs, STATUS_ShowAllFields
		Status.Caption = "Analyse der Flurstücke "
		Status.Field(1) = Str$(SelObjs)
		Status.Field(2) = "Objekte werden durchsucht."
		Status.Field(3) = "Es wurden bereits %d%% der Objekte analysiert."
	End If

' Jetzt alle selektierten Objekte bearbeiten
	Dim ActCnt As Long		' Zähler der bearbeiteten Objekte
	Dim MyFeat As String

	ActCnt = 0
	Dim FCode As Integer

	For Each Obj In objsFlur

	' Status weiterschalten
		If (Status Is Not Nothing) Then
			ActCnt = ActCnt + 1
			Status.Field(4) = "Objekt: " + Str$(Obj.Value)
			If (Status Is Not Nothing) Then
				Status.SetPosition ActCnt
				If (Status.WasCanceled()) Then	' Abbrechen gedrückt
					Exit For					' innere Schleife beenden
				End If
			End If
		End If

		If Obj.ObjType = OT_Area Then
 
			Set Feat = Obj.GetFeature ( strKZ)
			If Feat Is Not Nothing Then
   				MyFeat = Trim$(Feat.Feature$)
				If MyFeat <> "" Then
					bError = False
					ALB_Grundstueck Obj,MyFeat
					If bError = True Then
						Exit Sub
					End If
				Else
					FCode = 1
					ALB_FehlerCode Obj,FCode		
				End If
			Else
				FCode = 1
				ALB_FehlerCode Obj,FCode		
 			End If
		End If

	Next Obj


' Nun Straßen

	If (clsStr Is Nothing ) Then
		Set Status = Nothing
		Set rstPG = Nothing
		Set dbs = Nothing
		Set wsp = Nothing

		Beep
		MsgBox "Und tschüß!", ebInformation, strBoxTitel
		Exit Sub
	Else

		If (objsStr Is Nothing) Then
			Set Status = Nothing
			Set rstPG = Nothing
			Set dbs = Nothing
			Set wsp = Nothing

			Beep
			MsgBox "Und tschüß!", ebInformation, strBoxTitel
			Exit Sub

		End If

		If ( objsStr.Count = 0) Then
			Set Status = Nothing
			Set rstPG = Nothing
			Set dbs = Nothing
			Set wsp = Nothing

			Beep
			MsgBox "Und tschüß!", ebInformation, strBoxTitel
			Exit Sub

		End If


	End If

	SelObjS = objsStr.Count

	bErrFile = False	' Fehlerdatei (noch) nicht angelegt


' StatusAnzeige initialisieren
	
	If (Status Is Not Nothing) Then
		Status.Restart 0, SelObjs, STATUS_ShowAllFields
		Status.Caption = "Analyse der Straßen "
		Status.Field(1) = Str$(SelObjs)
		Status.Field(2) = "Objekte werden durchsucht."
		Status.Field(3) = "Es wurden bereits %d%% der Objekte analysiert."
	End If


	ActCnt = 0

	For Each Obj In objsStr

	' Status weiterschalten
		If (Status Is Not Nothing) Then
			ActCnt = ActCnt + 1
			Status.Field(4) = "Objekt: " + Str$(Obj.Value)
			If (Status Is Not Nothing) Then
				Status.SetPosition ActCnt
				If (Status.WasCanceled()) Then	' Abbrechen gedrückt
					Exit For					' innere Schleife beenden
				End If
			End If
		End If

		If Obj.ObjType = OT_Area Then
  
			Set Feat = Obj.GetFeature ( strKZ)
			If Feat Is Not Nothing Then
   				MyFeat = Trim$(Feat.Feature$)
				If MyFeat <> "" Then

					ALB_Grundstueck Obj,MyFeat

					ALB_Strasse Obj,MyFeat
				Else
					FCode = 1
					ALB_FehlerCode Obj,FCode		
					FCode = 4
					ALB_FehlerCode Obj,FCode		
				End If
			Else
				FCode = 1
				ALB_FehlerCode Obj,FCode		
				FCode = 4
				ALB_FehlerCode Obj,FCode		
 			End If
		End If

	Next Obj

	Set Status = Nothing
	Set rstPG = Nothing
	Set dbs = Nothing
	Set wsp = Nothing

	Beep
	MsgBox "Und tschüß!", ebInformation, strBoxTitel

	Exit Sub

' Abbruch bei Runtime-Error
CheckError0:
	AbbruchBeiFehler Err.Number


End Sub
'===================================================================
Sub ALB_Grundstueck ( Obj As GeoObject,Key As String) 


	On Error GoTo CheckError

	If Obj Is Nothing Then
		Exit Sub
	End If


	Dim FCode As Integer
	FCode = 0


	If Key = "" Then
		FCode = 1
		ALB_FehlerCode Obj,FCode		
		Exit Sub
	End If

  	If rstPG Is Not Nothing Then
		rstPG.Close
		Set rstPG = Nothing
	End If

	Dim SQLStatement As String

	SQLStatement = "SELECT * FROM " + strTabG + " WHERE " + strSFSK + " LIKE '" +Key+ "'"

	Set rstPG = dbs.OpenRecordset (SQLStatement, dbOpenSnapshot, dbReadOnly)

	If rstPG Is Nothing Then
		Exit Sub
	End If

	If rstPG.RecordCount > 0 Then

		If rstPG.RecordCount > 1 Then
			FCode = 5
			ALB_FehlerCode Obj,FCode		
			Exit Sub
		End If

		Set fldMDBGstNr = rstPG.Fields(strGGN)
 		Set fldMDBId = rstPG.Fields(strGID)

		rstPG.MoveLast
		rstPG.MoveFirst

		Dim Feld As String
		If fldMDBGstNr Is Not Nothing Then
			Feld$ = Trim$ ( fldMDBGstNr)
			If Feld$ <> "" Then
				Set VFeat = Obj.GetFeature(strGN)
				If VFeat Is Nothing Then
					Set VFeat = Obj.AddFeature(strGN,FEATURETYPE_WriteAble)
				End If

				If VFeat Is Not Nothing Then
					VFeat.Feature$ = Feld
				End If	
			Else
				ALB_FehlerCode Obj,FCode		
			End If
		End If
		Set VFeat = Nothing
		If fldMDBId Is Not Nothing Then
			Feld$ = Trim$ ( fldMDBId)
			If Feld$ <> "" Then
				Set VFeat = Obj.GetFeature(strUIN)
				If VFeat Is Nothing Then
					Set VFeat = Obj.AddFeature(strUIN,FEATURETYPE_WriteAble)
				End If

				If VFeat Is Not Nothing Then
					VFeat.Feature$ = Feld
				End If			
			End If
		End If
	Else
		ALB_FehlerCode Obj,FCode		

	End If

	Exit Sub

' Abbruch bei Runtime-Error
CheckError:
	AbbruchBeiFehler Err.Number
	bError = True

End Sub

'===============================================================
'===================================================================
Function HeaderEintrag ( OKey As String) As Boolean

	HeaderEintrag = False
	Dim Key As String

	If OKey = "" Then
		Exit Function
	End If

	Key = OKey + ".ris"

  	If rstPG Is Not Nothing Then
		rstPG.Close
		Set rstPG = Nothing
	End If

	Dim SQLStatement As String

	SQLStatement = "SELECT * FROM " + strTabA + " WHERE " + strTR + " LIKE '" +Key+ "'"

	Set rstPG = dbs.OpenRecordset (SQLStatement, dbOpenSnapshot, dbReadOnly)

	If rstPG Is Nothing Then
		MsgBox strTabA + " enthält keine Datei "+ Key, _
				ebQuestion, strBoxTitel
		Exit Function
	End If

	If rstPG.RecordCount > 0 Then

		Set fldMDBDBA = rstPG.Fields(strDB)

		rstPG.MoveLast
		rstPG.MoveFirst

		Dim Feld As String
		If fldMDBDBA Is Not Nothing Then
			Feld$ = Trim$ ( fldMDBDBA)
			If Feld$ <> "" Then
				Dim iFlag As Boolean
				If MyQuelle = "" Then
					iFlag = docGD.SetHeaderEntry (strDBCode,Feld)
				Else
					iFlag = docGD.SetHeaderEntryEx (MyQuelle,strDBCode,Feld)
				End If

				If iFlag = True Then
					msgbox strDBCode + " = " + Feld + " eingetragen",ebQuestion, strBoxTitel
				Else
					msgbox strDBCode + " = " + Feld + " nicht eingetragen",ebQuestion, strBoxTitel
					Exit Function
				End If
			End If
		End If
	Else
		MsgBox strTabA + " enthält keine Datei "+ Key, _
				ebQuestion, strBoxTitel
		Exit Function

	End If
	HeaderEintrag = True

End Function

'===============================================================
'===================================================================
Sub ALB_Strasse ( Obj As GeoObject,Key As String) 

	If Obj Is Nothing Then
		Exit Sub
	End If

	Dim FCode As Integer
	FCode = 0

	If Key = "" Then
		FCode = 1
		ALB_FehlerCode Obj,FCode		
		Exit Sub
	End If


  	If rstPG Is Not Nothing Then
		rstPG.Close
		Set rstPG = Nothing
	End If

	Dim SQLStatement As String

	SQLStatement = "SELECT * FROM " + strTabS + " WHERE " + strSFSK + " LIKE '" +Key+ "'"

	Set rstPG = dbs.OpenRecordset (SQLStatement, dbOpenSnapshot, dbReadOnly)

	If rstPG Is Nothing Then
		Exit Sub
	End If

	If rstPG.RecordCount > 0 Then

		Set fldMDBStrName = rstPG.Fields(strSSN)

		rstPG.MoveLast
		rstPG.MoveFirst

		Dim Feld As String
		If fldMDBStrName Is Not Nothing Then
			Feld$ = Trim$ ( fldMDBStrName)
			If Feld$ <> "" Then
				Set VFeat = Obj.GetFeature(strSN)
				If VFeat Is Nothing Then
					Set VFeat = Obj.AddFeature(strSN,FEATURETYPE_WriteAble)
				End If

				If VFeat Is Not Nothing Then
					VFeat.Feature$ = Feld
				End If
			Else
				FCode = 4
				ALB_FehlerCode Obj,FCode		
			End If
		End If

	End If

End Sub

'===============================================================
'===================================================================
Sub ALB_FehlerCode ( Obj As GeoObject,Key As Integer) 

	If Obj Is Nothing Then
		Exit Sub
	End If


	Dim Feld As String

	if ( Key = 1 ) Then
		Feld = "1"
		Set VFeat = Nothing
		Set VFeat = Obj.GetFeature(strFKZ)
		If VFeat Is Nothing Then
			Set VFeat = Obj.AddFeature(strFKZ,FEATURETYPE_WriteAble)
		End If

		If VFeat Is Not Nothing Then
			VFeat.Feature$ = Feld
		End If			
	End If

'================================
	if ( Key = 0 ) Then
		Feld = "1"
		Set VFeat = Nothing
		Set VFeat = Obj.GetFeature(strFAA)
		If VFeat Is Nothing Then
			Set VFeat = Obj.AddFeature(strFAA,FEATURETYPE_WriteAble)
		End If

		If VFeat Is Not Nothing Then
			VFeat.Feature$ = Feld
		End If	
	End If		
'================================
	if ( Key = 2 ) Then
		Feld = "1"
		Set VFeat = Nothing
		Set VFeat = Obj.GetFeature(strFIG)
		If VFeat Is Nothing Then
			Set VFeat = Obj.AddFeature(strFIG,FEATURETYPE_WriteAble)
		End If

		If VFeat Is Not Nothing Then
			VFeat.Feature$ = Feld
		End If			
	End If

'================================
	if ( Key = 3 ) Then
		Feld = "1"
		Set VFeat = Nothing
		Set VFeat = Obj.GetFeature(strFGG)
		If VFeat Is Nothing Then
			Set VFeat = Obj.AddFeature(strFGG,FEATURETYPE_WriteAble)
		End If

		If VFeat Is Not Nothing Then
			VFeat.Feature$ = Feld
		End If			
	End If

'================================
	if ( Key = 4 ) Then
		Feld = "1"
		Set VFeat = Nothing
		Set VFeat = Obj.GetFeature(strFSS)
		If VFeat Is Nothing Then
			Set VFeat = Obj.AddFeature(strFSS,FEATURETYPE_WriteAble)
		End If

		If VFeat Is Not Nothing Then
			VFeat.Feature$ = Feld
		End If			
	End If

'================================

	if ( Key = 5 ) Then
		Feld = "1"
		Set VFeat = Nothing
		Set VFeat = Obj.GetFeature(strFDUP)
		If VFeat Is Nothing Then
			Set VFeat = Obj.AddFeature(strFDUP,FEATURETYPE_WriteAble)
		End If

		If VFeat Is Not Nothing Then
			VFeat.Feature$ = Feld
		End If			
	End If

'================================
End Sub

'===============================================================
' --------------------------------------------------------------------------------------
' Fehlertext strErrText in Fehlerdatei (Name des aktuellen Projektes mit Attribut "err")
' eintragen
Sub ErrFile ( strErrText As String)

	Dim strErrDatei As String
	strErrDatei = Left$(docGD.FullName$,Len(docGD.FullName$)-3) + "err"
	Open strErrDatei For Append Lock Write As #1	' Fehler-Datei öffnen

	Print #1, strErrText
	Close											' Fehler-Datei schließen
	bErrFile = True
End Sub ' ErrFile
' --------------------------------------------------------------------------------------
' --------------------------------------------------------------------------------------
' ein Runtime-Error ist aufgetreten
Sub AbbruchBeiFehler (lngFehlerNr As Long)
	Msg.Close					' Eingangsbild beenden
	docGD.PreventRepaint = 0	' Zeichnen wieder ermöglichen
	docGD.Repaint				' Veränderungen zeichnen
	Beep

	If lngFehlerNr = 18 Then	' User interrupt (z.B. Cancel bei Geduldsanzeige)
		MsgBox "Die Bearbeitung wurde durch den Anwender vorzeitig beendet", _
				ebExclamation, strBoxTitel
	Else
		If lngFehlerNr = 3265 Then
			MsgBox "Fehler in ACCESS-Tabelle" + NL + "(falscher oder fehlender Feldname)"+NL+"Das Programm wurde abgebrochen mit" & NL & _
				"Fehler " & lngFehlerNr & " (" & Error(lngFehlerNr) & ")", _
				ebCritical, strBoxTitel
		Else
			MsgBox "Das Programm wurde abgebrochen mit" & NL & _
				"Fehler " & lngFehlerNr & " (" & Error(lngFehlerNr) & ")", _
				ebCritical, strBoxTitel
		End If
	End If
End Sub ' AbbruchBeiFehler

'=================================================================================================
  