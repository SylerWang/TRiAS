' **************************************************************************************
' *                                                                                    *
' *  Test auf Überschneidung von Grundstücken und                                      *
' *  Teilen der versiegelten Flächen an den Grundstücksgrenzen sowie                   *
' *  der Dachteilflächen an den Flurstücksgrenzen                                      *
' *  W. Mörtl   (03. 11. 98)                                                           *
' *                                                                                    *
' **************************************************************************************


Option Explicit

' ======================================================================================
' anwendungsspezifische Konstanten
Const strGrund = "Grundstück"
Const strFlur = "Flurstück"
Const strHof = "versiegelte Fläche"
Const strDach = "Dachteilfläche"
Const strStrasse = "Straße (allg.)"
Const dblFlMin = 0.5					' Mindest-Flächeninhalt (in m²)

' ======================================================================================
' Programmkonstanten
Const NL = Chr$(13) + Chr$(10)			' NewLine
Const strBoxTitel = "Flächen teilen"	' Titel der Message-Boxen
Const strErrTopRelation = "TopRelation"	' Fehlerausschrift

' ======================================================================================
' globale Variable
Private docGD As GeoDocument		' Projekt
Private clsGrund As GeoClass		' Objektklasse (Grundstücke)
Private clsFlur As GeoClass			' Objektklasse (Flurstücke)
Private clsHof As GeoClass			' Objektklasse (versiegelte Flächen)
Private clsDach As GeoClass			' Objektklasse (Dachteilflächen)
Private objsGrund As GeoObjects		' GeometrieObjekte (Grundstück)
Private objsFlur As GeoObjects		' GeometrieObjekte (Flurstück)
Private objsOrigin As GeoObjects	' GeometrieObjekte (Originalobjekte von geteilten
									' versiegelten bzw. Dachteilflächen)
Private objsNeuHof As GeoObjects 	' GeometrieObjekte (versiegelte Flächen)
Private objsNeuDach As GeoObjects 	' GeometrieObjekte (Dachteilflächen)
Private objsUnklar As GeoObjects 	' GeometrieObjekte (Teilflächen, die nur teilweise
									' auf einer allg. Straße liegen)

' ======================================================================================
' Subroutine's-Deklarationen
Declare Sub GetInsideObjects (Status As StatusIndicator, objArea As GeoObject, _
							  clsTestObj As GeoClass, objsNeueObj As GeoObjects)
Declare Sub Overlapping (Status As StatusIndicator, lngCnt As Long)
Declare Sub MinimumTest (objsTeil As GeoObjects)
Declare Sub StreetCleaning
Declare Sub AbbruchBeiFehler (lngFehlerNr As Long)
Declare Sub TRiASFehler (strFehlerText As String, Optional lngONr1 As Variant, _
						 Optional lngONr2 As Variant)
Declare Sub StatistikFehler (Optional lngONr As Variant)


' Function's-Deklarationen
Declare Function FlaechenInhalt (objGO As GeoObject) As Double
Declare Function MasseinheitAbtrennen (MWert$, MZahl#) As String



' ======================================================================================
Sub Main()

' Reaktion bei Runtime-Error
	On Error GoTo CheckError

' Eingangsbild
	Msg.Open NL & "   Routine: Flächenteilen" & NL &  _
			 "   Bitte etwas Geduld - die Abarbeitung wird vorbereitet!   " & NL, , _
			 False, False

' Initialisierungen
  	Set docGD = GetActiveDocument

	Set clsGrund = docGD.GetClass (strGrund)
	Set clsFlur = docGD.GetClass (strFlur)
	Set clsHof = docGD.GetClass (strHof)
	Set clsDach = docGD.GetClass (strDach)

	If (clsGrund Is Nothing) Then
		MsgBox "Im Projekt wurden keine Grundstücke gefunden!", _
				ebInformation, strBoxTitel
		Exit Sub
	End If

	If (clsFlur Is Nothing) Then
		MsgBox "Im Projekt wurden keine Flurstücke gefunden!", _
				ebInformation, strBoxTitel
		Exit Sub
	End If

	Dim intAnsw As Integer

	If (clsHof Is Nothing) Then
		MsgBox "Im Projekt wurden keine versiegelten Flächen gefunden!", _
				ebInformation, strBoxTitel
   		intAnsw = MsgBox ("Soll trotzdem weitergearbeitet werden?", _
						  ebYesNoCancel Or ebDefaultButton1 Or ebQuestion, strBoxTitel)
		If intAnsw = 2 Then	AbbruchBeiFehler 18	' Cancel
   		If intAnsw = 7 Then Exit Sub			' nein
	End If

	If (clsDach Is Nothing) Then
		MsgBox "Im Projekt wurden keine Dachteilflächen gefunden!", _
			   ebInformation, strBoxTitel
   		intAnsw = MsgBox ("Soll trotzdem weitergearbeitet werden?", _
						  ebYesNoCancel Or ebDefaultButton1 Or ebQuestion, strBoxTitel)
		If intAnsw = 2 Then	AbbruchBeiFehler 18	' Cancel
   		If intAnsw = 7 Then Exit Sub			' nein
	End If

' Test, ob Statistik-Erweiterung geladen ist durch den Versuch, von einem beliebigen
' Grundstück den Flächeninhalt zu ermitteln
	Set objsGrund = clsGrund.GetObjects (OT_Area)
	If (objsGrund Is Nothing) Then
		MsgBox "Im Projekt wurden keine flächenförmigen Grundstücke gefunden!", _
				ebInformation, strBoxTitel
	End If

	Set objsFlur = clsFlur.GetObjects (OT_Area)
	If (objsFlur Is Nothing) Then
		MsgBox "Im Projekt wurden keine flächenförmigen Flurstücke gefunden!", _
				ebInformation, strBoxTitel
	End If

	Dim ft As GeoFeature
	If objsGrund.Count > 0 Then
		Set ft = objsGrund(1).GetFeature ("Flächeninhalt")
	ElseIf objsFlur.Count > 0 Then
		Set ft = objsFlur(1).GetFeature ("Flächeninhalt")
	Else
		MsgBox "Im Projekt wurden weder flächenförmigen Grundstücke" & NL & _
				"noch flächenförmigen Flurstücke gefunden!", _
				ebInformation, strBoxTitel
		Exit Sub
	End If
	If (ft Is Nothing) Then StatistikFehler

' weitere Initialisierungen
	Dim lngCnt As Long
	lngCnt = objsGrund.Count			' Anzahl der Grundstücke
	Set objsOrigin = docGD.CreateGeoObjectsCollection()
	Set objsUnklar = docGD.CreateGeoObjectsCollection()
	Dim j As Long

	Msg.Close
	Dim Status As New StatusIndicator	' Geduldsanzeige 


' Test auf Überschneidung der Grundstücke
	If lngCnt >= 2 Then Overlapping Status, lngCnt

' Zeichnen abschalten
	docGD.PreventRepaint = 1

	Dim objArea As GeoObject

' Ermittlung und Teilung der versiegelten Flächen
	Set objsNeuHof = Nothing

	If (clsHof Is Not Nothing) Then

		Set objsNeuHof = docGD.CreateGeoObjectsCollection()
		j = 0

		If (Status Is Not Nothing) Then
			Status.Restart 1, lngCnt+1, STATUS_ShowAllFields
			Status.Field(1) = Str$(lngCnt)
			Status.Field(2) = "Grundstücke werden abgearbeitet"
			Status.Field(3) = "Bearbeitungsstand:  %d %%"
			Status.Caption = "Teilung der versiegelten Flächen"
		End If

		For Each objArea In objsGrund
			If (Status Is Not Nothing) Then	' Status weiterschalten
				j = j + 1
				Status.SetPosition j
				If Status.WasCanceled() Then
					Set Status = Nothing	' Geduldsanzeige abschalten
					AbbruchBeiFehler 18		' Cancel
				End If
			End If

			' zugehörige versiegelte Flächen ermitteln und teilen
			If objArea.ObjType = OT_Area Then
				GetInsideObjects Status, objArea, clsHof, objsNeuHof
			End If
		Next objArea
	End If


' Ermittlung und Teilung der Dachteilflächen
	Set objsNeuDach = Nothing

	If (clsDach Is Not Nothing) Then

		lngCnt = objsFlur.Count		' Anzahl der Flurstücke
		Set objsNeuDach = docGD.CreateGeoObjectsCollection()
		j = 0

		If (Status Is Not Nothing) Then
			Status.Restart 1, lngCnt+1, STATUS_ShowAllFields
			Status.Field(1) = Str$(lngCnt)
			Status.Field(2) = "Flurstücke werden abgearbeitet"
			Status.Field(3) = "Bearbeitungsstand:  %d %%"
			Status.Caption = "Teilung der Dachteilflächen"
		End If

		For Each objArea In objsFlur
			If (Status Is Not Nothing) Then	' Status weiterschalten
				j = j + 1
				Status.SetPosition j
				If Status.WasCanceled() Then
					Set Status = Nothing	' Geduldsanzeige abschalten
					AbbruchBeiFehler 18		' Cancel
				End If
			End If

			' zugehörige Dachteilflächen ermitteln und teilen
			If objArea.ObjType = OT_Area Then
				GetInsideObjects Status, objArea, clsDach, objsNeuDach
			End If
		Next objArea
	End If

' Zeichnen wieder ermöglichen
	docGD.PreventRepaint = 0
	docGD.Repaint				' Veränderungen zeichnen


' Löschung der versiegelten Flächen und Dachteilflächen, die auf einer allgemeinen
' Straße liegen
	StreetCleaning


' Löschung der überzähligen Ursprungsobjekte
	lngCnt = objsOrigin.Count	' Anzahl der zu löschenden Objekte

	If lngCnt > 0 Then

		j = 0
		If (Status Is Not Nothing) Then
		Status.Restart 1, lngCnt+1, STATUS_ShowAllFields
			Status.Field(1) = Str$(lngCnt)
			Status.Field(2) = "Ursprungsobjekte werden gelöscht"
			Status.Field(3) = "Bearbeitungsstand:  %d %%"
			Status.Field(4) = ""
			Status.Caption = "Löschung der geteilten Ursprungsobjekte"
		End If

		For Each objArea In objsOrigin		' alte GeoObjekte löschen
			If (Status Is Not Nothing) Then	' Status weiterschalten
				j = j + 1
				Status.SetPosition j
				If Status.WasCanceled() Then
					Set Status = Nothing	' Geduldsanzeige abschalten
					AbbruchBeiFehler 18		' Cancel
				End If
			End If
			docGD.RemoveObject objArea
		Next objArea
	End If

	objsOrigin.Refresh
	Set objsOrigin = Nothing

	Set Status = Nothing	' Geduldsanzeige abschalten


' Ergebnisanzeige in Recherchefenstern
	Dim gowRWin1 As GeoObjectWin, gowRWin2 As GeoObjectWin, gowRWin3 As GeoObjectWin

	If (objsNeuHof Is Not Nothing) Then
		If objsNeuHof.Count > 0 Then
			Set gowRWin1 = objsNeuHof.CreateGeoObjectWin()
			gowRWin1.Name = "Neue versiegelte Flächen"
			gowRWin1.Top = 1
			gowRWin1.Visible = 1
		End If
	End If

	If (objsNeuDach Is Not Nothing) Then
		If objsNeuDach.Count > 0 Then
			Set gowRWin2 = objsNeuDach.CreateGeoObjectWin()
			gowRWin2.Name = "Neue Dachteilflächen"
			If (gowRWin1 Is Not Nothing) Then
				gowRWin2.Top = gowRWin1.Top + gowRWin1.Height
			Else
				gowRWin2.Top = 1
			End If
			gowRWin2.Visible = 1
		End If
	End If

	If objsUnklar.Count > 0 Then
		Set gowRWin3 = objsUnklar.CreateGeoObjectWin()
		gowRWin3.Name = "Teilweise auf allg. Straße liegend"
		If (gowRWin2 Is Not Nothing) Then
			gowRWin3.Top = gowRWin2.Top + gowRWin2.Height
		ElseIf (gowRWin1 Is Not Nothing) Then
			gowRWin3.Top = gowRWin1.Top + gowRWin1.Height
		Else
			gowRWin3.Top = 1
		End If
		gowRWin3.Visible = 1
	End If

	Beep
	MsgBox "Wenn Sie bis hierher gekommen sind, dann" & NL & _
		   "grüßen Sie doch bitte den Generaldirektor von mir." & NL & _
		   "Danke!", ebInformation, strBoxTitel

	Exit Sub


' Abbruch bei Runtime-Error
CheckError:
	AbbruchBeiFehler Err.Number

End Sub ' Main


' ======================================================================================
' Subroutine's
' --------------------------------------------------------------------------------------
' "OnDocumentToClose()" wird nach dem Schließen des Projektes gerufen
Sub OnDocumentToClose (Doc As GeoDocument)
	docGD.PreventRepaint = 0	' Zeichnen wieder ermöglichen
	SetBreakScript(true)		' den laufenden Script anhalten
End Sub


' ---------------------------------------------------------------------------------------
' Die zu der Fläche objArea gehörigen Objekte der zu testenden Klasse clsTestObj
' (versiegelte bzw. Dachteilflächen) werden ermittelt und ggf. an der objArea-Kontur
' geteilt
Sub GetInsideObjects (Status As StatusIndicator, objArea As GeoObject, _
					  clsTestObj As GeoClass, objsNeueObj As GeoObjects)

	Dim objsInside As GeoObjects	' die innerhalb von objArea liegenden Objekte
									' (sowohl von vornherein vollständig als auch nach
									'  der Teilung innerhalb liegende Objekte)
	Set objsInside = docGD.CreateGeoObjectsCollection()

	Dim xmin As Double, ymin As Double, xmax As Double, ymax As Double
	objArea.GetGeometryRect xmin, ymin, xmax, ymax
	Dim objsTest As GeoObjects		' im umschließenden Rechteck von objArea liegende
									' Objekte der Klasse clsTestObj
	Set objsTest = clsTestObj.GetObjectsInRect (xmin, ymin, xmax, ymax)

	' wichtiger Einschub, damit die nicht schon gebildeten Schnittergebnisse noch einmal
	' angefaßt werden und dann womöglich noch in objsOrigin abgelegt und damit am Schluß
	' gelöscht werden (kann durch Rundungseffekte double -> KoOrd beim Schneiden
	' durchaus passieren, wenn ein Schnittergebnisse aus der näheren Umgebung
	' "infinitesimal" in die aktuelle objArea-Fläche hinein ragt)
	Set objsTest = objsTest.Difference(objsNeueObj)

	If objsTest.Count = 0 Then Exit Sub

	Dim intRel As Integer			' Rückkehrwert von TopRelation()
	Dim objDummy As GeoObject		' Rückkehrwert von Add()
	Dim objsTeil As GeoObjects		' im Grundstück liegende Teilobjekte
	Dim objTest As GeoObject		' ein einzelnes objsTest-Objekt

	For Each objTest In objsTest
		If objTest.ObjType <> OT_Area Then GoTo Continue1

		If (Status Is Not Nothing) Then
			Status.Field(4) = objArea.Value & " mit " & objTest.Value
		End If

		' Relation des objTest-Objektes zu der objArea-Fläche
		' Rückgabewert kann sein: innerhalb (0), außerhalb (1), inner/außerhalb (2) oder
		' unklar (3)
		intRel = objArea.TopRelation (objTest)

		Select Case intRel		' Relation
			Case 0		' innerhalb
				Set objDummy = objsInside.Add(objTest.Value)
			Case 2		' inner/außerhalb
				Set objsTeil = objArea.GetIntersectObjects (objTest)
				If (objsTeil Is Not Nothing) Then
					MinimumTest objsTeil
					If objsTeil.Count > 0 Then
						Set objsInside = objsInside.Union(objsTeil)
						Set objsNeueObj = objsNeueObj.Union(objsTeil)
						Set objDummy = objsOrigin.Add(objTest.Value)
					End If
				End If
			Case 3		' unklar
				TRiASFehler strErrTopRelation
		End Select

Continue1:
	Next objTest

End Sub ' GetInsideObjects


' --------------------------------------------------------------------------------------
' Test auf Überschneidung der Grundstücke
Sub Overlapping (Status As StatusIndicator, lngCnt As Long)

	Dim intAnsw As Integer
	intAnsw = MsgBox ("Sollen die Grundstücke auf Überschneidung getestet werden?", _
					  ebYesNoCancel Or ebDefaultButton1 Or ebQuestion, strBoxTitel)

	If intAnsw = 2 Then	AbbruchBeiFehler 18	' Cancel
	If intAnsw = 7 Then Exit Sub			' nein

	Dim i As Long, k As Long		' Zähler für Grundstücke
	Dim j As Long					' Zähler für Geduldsanzeige
	Dim intRel As Integer			' Rückkehrwert von TopRelation()
	Dim objDummy As GeoObject		' Rückkehrwert von Add()
	Dim objsOverlap As GeoObjects	' sich überlappende Grundstücke
	Set objsOverlap = docGD.CreateGeoObjectsCollection()

	If (Status Is Not Nothing) Then
		Status.Restart 1, lngCnt*(lngCnt-1)/2+1, STATUS_ShowAllFields
		Status.Field(1) = Str$(lngCnt)
		Status.Field(2) = "Grundstücke werden getestet"
		Status.Field(3) = "Bearbeitungsstand:  %d %%"
		Status.Caption = "Test auf Grenzstreitigkeiten bei Grundstücken"
	End If

	j = 0

	For i = 1 To lngCnt - 1
		For k = i + 1 To lngCnt

			If (Status Is Not Nothing) Then	' Status weiterschalten
				j = j + 1
				Status.SetPosition j
				If Status.WasCanceled() Then
					Set Status = Nothing	' Geduldsanzeige abschalten
					AbbruchBeiFehler 18		' Cancel
				End If
			End If

			If objsGrund(i).ObjType = OT_Area And objsGrund(k).ObjType = OT_Area Then
				If (Status Is Not Nothing) Then
					Status.Field(4) = objsGrund(i).Value & " mit " & objsGrund(k).Value
				End If

				intRel = objsGrund(i).TopRelation (objsGrund(k))
				If intRel = 0 Or intRel = 2 Then	' innerhalb oder inner/außerhalb
					Set objDummy = objsOverlap.Add(objsGrund(i).Value)
					Set objDummy = objsOverlap.Add(objsGrund(k).Value)
				End If
			End If

		Next k
	Next i

	If objsOverlap.Count > 0 Then
		Dim orwOverlap As GeoObjectWin
		Set orwOverlap = objsOverlap.CreateGeoObjectWin()
		orwOverlap.Name = "Überlappende Grundstücke"
		orwOverlap.Visible = 1

		Beep
		MsgBox "Das Projekt enthält sich überlappende Grundstücke." & NL & _
			   "Deshalb wird das Programm erst einmal abgebrochen." & NL & _
			   "Viel Spaß und eine ruhige Hand beim Korrigieren.", _
			   ebInformation, strBoxTitel
		End
	End If

End Sub ' Overlapping


' --------------------------------------------------------------------------------------
' Test, ob der Flächeninhalt der übergebenen Flächen objsTeil den vorgegebenen
' Mindest-Flächeninhalt dblFlMin haben; wenn nicht, werden diese Flächen gelöscht
Sub MinimumTest (objsTeil As GeoObjects)

	Dim objTeil As GeoObject
	Dim dblFlInh As Double		' Flächeninhalt einer Teilfläche

	For Each objTeil In objsTeil

		If objTeil.ObjType = OT_Area Then
			dblFlInh = FlaechenInhalt (objTeil)
			If dblFlInh < dblFlMin Then
				docGD.RemoveObject objTeil	' zu kleine Fläche löschen
			End If
		Else	' Schnittergebnis ist gar keine Fläche 
			docGD.RemoveObject objTeil		' entartete Fläche löschen
		End If

	Next objTeil

	objsTeil.Refresh

End Sub ' MinimumTest


' --------------------------------------------------------------------------------------
' Löschung der versiegelten Flächen und Dachteilflächen, die auf einer allgemeinen
' Straße liegen
Sub StreetCleaning

	Dim clsStrasse As GeoClass		' Objektklasse (allgemeine Straßen)
	Set clsStrasse = docGD.GetClass (strStrasse)
	If (clsStrasse Is Nothing) Then
		MsgBox "Das Projekt enthält keine allgemeinen Straßen", ebQuestion, strBoxTitel
		Exit Sub
	End If

	Dim objsStrasse As GeoObjects	' GeometrieObjekte (allgemeine Straßen)
	Set objsStrasse = clsStrasse.GetObjects (OT_Area)
	If objsStrasse.Count = 0 Then
		MsgBox "Das Projekt enthält keine flächenmäßigen allgemeinen Straßen", _
				ebQuestion, strBoxTitel
		Exit Sub
	End If

	Dim objsNeu As GeoObjects		' alle neuen versiegelten und Dachteilflächen
	Set objsNeu = docGD.CreateGeoObjectsCollection()

	If (objsNeuHof Is Not Nothing) Then
		If objsNeuHof.Count > 0 Then
			Set objsNeu = objsNeu.Union(objsNeuHof)
		End If
	End If

	If (objsNeuDach Is Not Nothing) Then
		If objsNeuDach.Count > 0 Then
			Set objsNeu = objsNeu.Union(objsNeuDach)
		End If
	End If

	If objsNeu.Count = 0 Then
		MsgBox "Es wurden weder neue versiegelte Flächen" & NL & _
				"noch neue Dachteilflächen gebildet.", ebQuestion, strBoxTitel
		Exit Sub
	End If

	Dim xmin As Double, ymin As Double, xmax As Double, ymax As Double
	Dim objsTest As GeoObjects			' im umschließenden Rechteck von objStrasse
										' liegende neue Teilflächen
	Dim objStrasse As GeoObject, objTest As GeoObject
	Dim intRel As Integer				' Rückkehrwert von TopRelation()
	Dim objDummy As GeoObject			' Rückkehrwert von Add()

	Dim lngCnt As Long, j As Long
	lngCnt = objsStrasse.Count			' Anzahl der allgemeinen Straßen
	j = 0

	Dim Status As New StatusIndicator	' Geduldsanzeige 
	If (Status Is Not Nothing) Then
		Status.Restart 1, lngCnt+1, STATUS_ShowAllFields
		Status.Field(1) = Str$(lngCnt)
		Status.Field(2) = "allgemeine Straßen werden gefegt"
		Status.Field(3) = "Bearbeitungsstand:  %d %%"
		Status.Caption = "Löschung auf der Straße liegender Teilflächen"
	End If

' Abarbeitung aller allgemeinen	Straßen
	For Each objStrasse In objsStrasse

		If (Status Is Not Nothing) Then	' Status weiterschalten
			j = j + 1
			Status.SetPosition j
			If Status.WasCanceled() Then
				Set Status = Nothing	' Geduldsanzeige abschalten
				AbbruchBeiFehler 18		' Cancel
			End If
		End If

		objStrasse.GetGeometryRect xmin, ymin, xmax, ymax
		Set objsTest = objsNeu.GetObjectsInRect (xmin, ymin, xmax, ymax)

		For Each objTest In objsTest
			intRel = objStrasse.TopRelation (objTest)

			Select Case intRel		 ' Relation von objTest zu objStrasse
				Case 0		' innerhalb
					docGD.RemoveObject objTest
				Case 2		' inner/außerhalb
					Set objDummy = objsUnklar.Add(objTest.Value)
				Case 3		' unklar
					TRiASFehler strErrTopRelation
			End Select
		Next objTest
	Next objStrasse

	Set Status = Nothing	' Geduldsanzeige abschalten

End Sub ' StreetCleaning


' --------------------------------------------------------------------------------------
' ein Runtime-Error ist aufgetreten
Sub AbbruchBeiFehler (lngFehlerNr As Long)

	Msg.Close					' Eingangsbild beenden
	docGD.PreventRepaint = 0	' Zeichnen wieder ermöglichen
	docGD.Repaint				' Veränderungen zeichnen

	Beep
	If lngFehlerNr = 18 Then	' User interrupt (z.B. Cancel bei Geduldsanzeige)
		MsgBox "Die Abarbeitung wurde durch den Anwender vorzeitig beendet!", _
			   ebExclamation, strBoxTitel
	Else
		MsgBox "Das Programm wurde abgebrochen mit" & NL & _
			   "Fehler " & lngFehlerNr & " (" & Error(lngFehlerNr) & ")", _
			   ebCritical, strBoxTitel
	End If

	End

End Sub ' AbbruchBeiFehler


' --------------------------------------------------------------------------------------
' Fehler bei Abarbeitung einer TRiAS-Routine aufgetreten
Sub TRiASFehler (strFehlerText As String, Optional lngONr1 As Variant, _
				 Optional lngONr2 As Variant)
	Dim strZusatz As String
	strZusatz = ""
	If Not isMissing(lngONr1) Then
		If Not isMissing(lngONr2) Then
			strZusatz = NL & " (beteiligte Objekte: " & lngONr1 & ", " &  lngONr2 & ")"
		Else
			strZusatz = NL & " (beteiligtes Objekt: " & lngONr1 & ")"
		End If
	End If

	Beep
	MsgBox "In der Funktion '" & strFehlerText & "' ist ein Fehler aufgetreten!" & _
			strZusatz, ebCritical, strBoxTitel

End Sub ' TRiASFehler


' --------------------------------------------------------------------------------------
' Fehler bei Statistik aufgetreten
Sub StatistikFehler (Optional lngONr As Variant)
	Beep
	Dim strZusatz As String
	strZusatz = "."
	If Not isMissing(lngONr) Then
		strZusatz = NL & "(beteiligtes Objekt: " & lngONr & ")."
	End If
	MsgBox "Das Programm mußte vorzeitig beendet werden" & strZusatz & NL & _
		   "Prüfen Sie bitte, ob das Zusatzmodul" & NL & "'Statistische Auswertungen' geladen ist !", _
		   ebCritical, strBoxTitel
	End
End Sub ' StatistikFehler



' ======================================================================================
' Function's
' --------------------------------------------------------------------------------------
' Flächeninhalt eines GeoObjetktes in m²; im Fehlerfall (unbekannte Maßeinheit) wird -1
' zurückgegeben
Function FlaechenInhalt (objGO As GeoObject) As Double
	Dim ftFlInhalt As GeoFeature	
	Set ftFlInhalt = objGO.GetFeature("Flächeninhalt")
	If (ftFlInhalt Is Nothing) Then StatistikFehler objGO.Value

	Dim strFl As String, strME As String
	strFl = Trim$(ftFlInhalt.Feature$)	' Flächeninhalt und Maßeinheit
	If strFl = "" Then	' kein Flächenobjekt
		FlaechenInhalt = 0
		Exit Function
	End If

	Dim Flaeche As Double				' Flächeninhalt ohne Maßeinheit
	strME = MasseinheitAbtrennen (strFl, Flaeche)

	Select Case LCase(Mid(strME,2,1))	' das 1. Zeichen von strME ist "["
		Case "m"	' m²
			FlaechenInhalt = Flaeche
		Case "h"	' ha
			FlaechenInhalt = 10000 * Flaeche
		Case "k"	' km²
			FlaechenInhalt = 1000000 * Flaeche
		Case Else
			MsgBox "Die ermittelte Maßeinheit des Flächeninhalts ist unbekannt!", _
					ebCritical, strBoxTitel
			FlaechenInhalt = -1
	End Select
End Function ' FlaechenInhalt


' --------------------------------------------------------------------------------------
' Maßeinheit aus dem übergebenen String MWert eliminieren und in der Form "[...]"
' zurückgeben; dabei wird vorausgesetzt, daß die Maßeinheit in eckige Klammern '[]'
' eingeschlossen ist
Function MasseinheitAbtrennen (MWert$, MZahl#) As String
	Dim intPos As Integer
	intPos = InStr (MWert$,"[")		' Position der öffnenden Klammer "[" suchen
	If intPos = 0 Then
		MsgBox "Maßeinheit des Flächeninhalts beginnt nicht mit [", _
				ebCritical, strBoxTitel
		MasseinheitAbtrennen = "  "	' Rückgabe bei Fehler
	End If

	intPos = InStr (MWert$," ")			' Position zwischen Zahlenwert und Dimension
	MZahl# = Val (Left(MWert$,intPos))	' Dimension abschneiden
	MasseinheitAbtrennen = Right(MWert$,Len(MWert$)-intPos)	' Maßzahl ohne Maßeinheit als Rückgabewert
End Function ' MasseinheitAbtrennen
  