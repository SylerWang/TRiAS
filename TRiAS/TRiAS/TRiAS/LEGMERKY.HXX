
//////////////////////////////////////////////////////////////////////////////
//
//  FILENAME:          legmerky.hxx
//
//  FILE DESCRIPTION:  Header file with derived parser class declarations
//
//  Input file:        obj32\Legmerkm.ypp
//  Options:           -no_ast_dump -no_debug -table fast -no_line -no_far
//                     -no_microsoft_precompiled_header 
//  Character Set:     CHARSET ASCII8
//  Output Directory:  current directory
//  Include Paths:     current directory
//
//  Automatically generated by Yacc++ Revision 2.3 (1999 January 4)
//  on Sat Nov 13 20:04:47 2004
//
//////////////////////////////////////////////////////////////////////////////

#include "yy_ansi.h"
#include "yy_ast.h"
#include "yy_err.h"
#include "yy_sym.h"
class  yy_psr_LegendMerkmal_obj;

typedef class  yy_psr_LegendMerkmal_obj *yy_psr_LegendMerkmal_ptr;

class HEntryInfo;
class TEntryInfo;
class FEntryInfo;
class LEntryInfo;
class PEntryInfo;
class MerkmalsInfos;
#include "yy_myref.h"

#ifndef yy_decl_HEntryInfo
#define yy_decl_HEntryInfo 1
class HEntryInfo : public yy_ast_obj {
 public:
    HEntryInfo(yy_psr_LegendMerkmal_obj *yy_this_psr_ptr);
    virtual ~HEntryInfo();
    inline int yy_type();
    int yy_type(int);
    inline int yy_num_operands();
    int yy_num_operands(int);
    inline yy_ref_obj &yy_operand(int);
    yy_ref_obj &yy_operand(int, yy_ref_obj);
 protected:
    int yy_this_type;
    int                 yy_this_num_operands;
    yy_ref_ptr          yy_this_operand;  // variable length array
};
#endif /* yy_decl_HEntryInfo */

#ifndef yy_decl_TEntryInfo
#define yy_decl_TEntryInfo 1
class TEntryInfo : public yy_ast_obj {
 public:
    TEntryInfo(yy_psr_LegendMerkmal_obj *yy_this_psr_ptr);
    virtual ~TEntryInfo();
    inline int yy_type();
    int yy_type(int);
    inline int yy_num_operands();
    int yy_num_operands(int);
    inline yy_ref_obj &yy_operand(int);
    yy_ref_obj &yy_operand(int, yy_ref_obj);
 protected:
    int yy_this_type;
    int                 yy_this_num_operands;
    yy_ref_ptr          yy_this_operand;  // variable length array
};
#endif /* yy_decl_TEntryInfo */

#ifndef yy_decl_FEntryInfo
#define yy_decl_FEntryInfo 1
class FEntryInfo : public yy_ast_obj {
 public:
    FEntryInfo(yy_psr_LegendMerkmal_obj *yy_this_psr_ptr);
    virtual ~FEntryInfo();
    inline int yy_type();
    int yy_type(int);
    inline int yy_num_operands();
    int yy_num_operands(int);
    inline yy_ref_obj &yy_operand(int);
    yy_ref_obj &yy_operand(int, yy_ref_obj);
 protected:
    int yy_this_type;
    int                 yy_this_num_operands;
    yy_ref_ptr          yy_this_operand;  // variable length array
};
#endif /* yy_decl_FEntryInfo */

#ifndef yy_decl_LEntryInfo
#define yy_decl_LEntryInfo 1
class LEntryInfo : public yy_ast_obj {
 public:
    LEntryInfo(yy_psr_LegendMerkmal_obj *yy_this_psr_ptr);
    virtual ~LEntryInfo();
    inline int yy_type();
    int yy_type(int);
    inline int yy_num_operands();
    int yy_num_operands(int);
    inline yy_ref_obj &yy_operand(int);
    yy_ref_obj &yy_operand(int, yy_ref_obj);
 protected:
    int yy_this_type;
    int                 yy_this_num_operands;
    yy_ref_ptr          yy_this_operand;  // variable length array
};
#endif /* yy_decl_LEntryInfo */

#ifndef yy_decl_PEntryInfo
#define yy_decl_PEntryInfo 1
class PEntryInfo : public yy_ast_obj {
 public:
    PEntryInfo(yy_psr_LegendMerkmal_obj *yy_this_psr_ptr);
    virtual ~PEntryInfo();
    inline int yy_type();
    int yy_type(int);
    inline int yy_num_operands();
    int yy_num_operands(int);
    inline yy_ref_obj &yy_operand(int);
    yy_ref_obj &yy_operand(int, yy_ref_obj);
 protected:
    int yy_this_type;
    int                 yy_this_num_operands;
    yy_ref_ptr          yy_this_operand;  // variable length array
};
#endif /* yy_decl_PEntryInfo */

#ifndef yy_decl_MerkmalsInfos
#define yy_decl_MerkmalsInfos 1
class MerkmalsInfos : public yy_ast_obj {
 public:
    MerkmalsInfos(yy_psr_LegendMerkmal_obj *yy_this_psr_ptr);
    virtual ~MerkmalsInfos();
    inline int yy_type();
    int yy_type(int);
 protected:
    int yy_this_type;
};
#endif /* yy_decl_MerkmalsInfos */


#include "yy_psrfa.h"

#ifndef yy_psr_LegendMerkmal_obj_h_
#define yy_psr_LegendMerkmal_obj_h_ 1

class  yy_psr_LegendMerkmal_ref_factory_obj : public yy_ref_factory_obj {

 public:

    yy_psr_LegendMerkmal_ref_factory_obj();

    ~yy_psr_LegendMerkmal_ref_factory_obj();

    virtual yy_ref_ptr yy_ref_factory_new_obj(
        int                  yy_type = 0,
        int                  yy_int = 0) const;

    virtual yy_ref_ptr yy_ref_factory_new_array(
        size_t               yy_size) const;

    virtual void yy_ref_factory_delete(
        yy_ref_ptr           yy_ref) const;

    virtual void yy_ref_factory_delete_array(
        yy_ref_ptr           yy_array) const;

    virtual yy_ref_ptr yy_ref_factory_grow_array(
        size_t               yy_new_size,
        yy_ref_ptr           yy_old_array,
        size_t               yy_old_size,
        size_t               yy_copy_bottom = 0,
        size_t               yy_copy_top = 0) const;

    virtual void yy_ref_factory_assign(
        yy_ref_obj           &yy_target,
        const yy_ref_obj     &yy_source) const;

    virtual void yy_ref_factory_array_assign(
        yy_ref_ptr           yy_array,
        size_t               yy_target,
        size_t               yy_source) const;

    virtual void yy_ref_factory_array_assign(
        yy_ref_ptr           yy_array,
        size_t               yy_target,
        const yy_ref_obj     &yy_source) const;

    virtual yy_ref_obj &yy_ref_factory_array_deref(
        yy_ref_ptr           yy_array,
        size_t               yy_source) const;

    virtual int &yy_ref_factory_array_deref_int(
        yy_ref_ptr           yy_array,
        size_t               yy_source) const;

    virtual int &yy_ref_factory_array_deref_type(
        yy_ref_ptr           yy_array,
        size_t               yy_source) const;

    virtual size_t yy_ref_obj_size(
        size_t               yy_ref_size,
        const char           *file,
        int                  lineno) const;

    virtual const char *yy_restore_data(
        const char           *yy_data_ptr,
        yy_ref_ptr           yy_array,
        size_t               yy_target) const;

virtual char *yy_save_data(
        char                 *yy_data_ptr,
        yy_ref_ptr           yy_array,
        size_t               yy_source) const;

    virtual size_t yy_sizeof_data(void) const;

    };  // yy_psr_LegendMerkmal_ref_factory_obj

class  yy_psr_LegendMerkmal_obj : public yy_psr_obj_fast {

 public:

    enum yy_psr_cmd_max_enum { yy_psr_cmd_max_ = 1189 };

    enum yy_psr_num_states_enum { yy_psr_num_states_ = 17 };

    enum yy_psr_pmin_enum { yy_pmin_ = -2 };

    enum yy_psr_pmax_enum { yy_pmax_ = 19 };

    enum yy_psr_tkn_max_enum { yy_ptknmax_ = 12 };

    enum yy_psr_numbers_enum {
        WHITESPACE_ = yy_psr_obj::yy_discard_type_,
        NEWLINE_ = yy_psr_obj::yy_discard_type_,
        SEMICOLON_ = yy_psr_obj::yy_discard_type_,
        EQUAL_ = yy_psr_obj::yy_discard_type_,
        COLON_ = yy_psr_obj::yy_discard_type_,
        COMMA_ = yy_psr_obj::yy_discard_type_,
        yy_eof_ = 0,
        INTEGER_ = 1,
        STRING_ = 2,
        // 'P' = 3,
        // 'p' = 4,
        // 'L' = 5,
        // 'l' = 6,
        // 'F' = 7,
        // 'f' = 8,
        // 'T' = 9,
        // 't' = 10,
        // 'H' = 11,
        // 'h' = 12,
        yy_error_ = -2,
        HEntryInfo_ = 13,
        TEntryInfo_ = 14,
        FEntryInfo_ = 15,
        LEntryInfo_ = 16,
        PEntryInfo_ = 17,
        MerkmalsInfo_ = 18,
        MerkmalsInfos_ = 19
        };

    enum yy_psr_class_enum {
        yy_psr_class_LegendMerkmal_ = 0,
        yy_psr_max_class_ = 1
        };

    yy_psr_LegendMerkmal_obj(
        yy_lex_ptr      yy_this_lex_obj_ptr,
        int             yy_psr_new_class = yy_psr_dflt_class_,
        int             yy_psr_new_start = yy_psr_dflt_start_,
        int             yy_psr_new_left_max = yy_psr_left_max_,
        int             yy_psr_new_rt_max = yy_psr_rt_max_,
        int             yy_psr_new_rdc_max = yy_psr_rdc_max_
        );

    virtual ~yy_psr_LegendMerkmal_obj();

    virtual void yy_psr_do_action(
        int                     yy_psr_action_index
        );


	private:
		yy_ref_ptr m_pEntries;
		int m_iEntryCnt;
		
	public:
		void EnterLegEntries (void) 
		{
			DeleteAST();	// alten Baum löschen
			m_pEntries = new yy_ref_obj[yy_psr_last()];
			if (m_pEntries == NULL) {
				yy_err_report(406);
				yy_assert_fail("space unavailable from new", "legmerkm.yxx", 93);
			}
			m_iEntryCnt = yy_psr_last();
			for (short i = 0; i < m_iEntryCnt; i++) 
				m_pEntries[i] = yy_psr_ref(i+1);
		}
		void DeleteAST (void)
		{
			if (m_pEntries && m_iEntryCnt > 0) {
				for (short i = 0; i < m_iEntryCnt; ++i)
					delete yy_ast_ptr(m_pEntries[i]);
				delete [] m_pEntries;
				m_pEntries = NULL;
				m_iEntryCnt = 0;
			}
		}
		int FCnt (void) { return m_iEntryCnt; }
		yy_ast_ptr FEntry (int i) { return yy_ast_ptr(m_pEntries[i]); }
	
    };  // yy_psr_LegendMerkmal_obj

#endif /* yy_psr_LegendMerkmal_h_ */
#ifndef yy_inline_HEntryInfo
#define yy_inline_HEntryInfo 1
inline int HEntryInfo::yy_type() { return (yy_this_type); }
inline int HEntryInfo::yy_num_operands() { return (yy_this_num_operands); }
inline yy_ref_obj &HEntryInfo::yy_operand(int yy_operand_num) { return (yy_this_operand[yy_operand_num]); }
#endif /* yy_inline_HEntryInfo */

#ifndef yy_inline_TEntryInfo
#define yy_inline_TEntryInfo 1
inline int TEntryInfo::yy_type() { return (yy_this_type); }
inline int TEntryInfo::yy_num_operands() { return (yy_this_num_operands); }
inline yy_ref_obj &TEntryInfo::yy_operand(int yy_operand_num) { return (yy_this_operand[yy_operand_num]); }
#endif /* yy_inline_TEntryInfo */

#ifndef yy_inline_FEntryInfo
#define yy_inline_FEntryInfo 1
inline int FEntryInfo::yy_type() { return (yy_this_type); }
inline int FEntryInfo::yy_num_operands() { return (yy_this_num_operands); }
inline yy_ref_obj &FEntryInfo::yy_operand(int yy_operand_num) { return (yy_this_operand[yy_operand_num]); }
#endif /* yy_inline_FEntryInfo */

#ifndef yy_inline_LEntryInfo
#define yy_inline_LEntryInfo 1
inline int LEntryInfo::yy_type() { return (yy_this_type); }
inline int LEntryInfo::yy_num_operands() { return (yy_this_num_operands); }
inline yy_ref_obj &LEntryInfo::yy_operand(int yy_operand_num) { return (yy_this_operand[yy_operand_num]); }
#endif /* yy_inline_LEntryInfo */

#ifndef yy_inline_PEntryInfo
#define yy_inline_PEntryInfo 1
inline int PEntryInfo::yy_type() { return (yy_this_type); }
inline int PEntryInfo::yy_num_operands() { return (yy_this_num_operands); }
inline yy_ref_obj &PEntryInfo::yy_operand(int yy_operand_num) { return (yy_this_operand[yy_operand_num]); }
#endif /* yy_inline_PEntryInfo */

#ifndef yy_inline_MerkmalsInfos
#define yy_inline_MerkmalsInfos 1
inline int MerkmalsInfos::yy_type() { return (yy_this_type); }
#endif /* yy_inline_MerkmalsInfos */

#ifndef yy_psr_dflt_obj

#define yy_psr_dflt_obj yy_psr_LegendMerkmal_obj

typedef class  yy_psr_dflt_obj       *yy_psr_dflt_ptr;

#endif /* yy_psr_dflt_obj */

