// $Header: $
// Copyright© 1998-2001 TRiAS GmbH Potsdam, All rights reserved
// Created: 27.04.2001 16:50:09 
//
// This file was generated by the TRiASDB Data Server Wizard V1.02.115 (#HK010427)
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR 
// PURPOSE.
//
// @doc
// @module TRiASOGCFeatures.h | Declaration of the <c CTRiASOGCFeatures> class

#if !defined(_TRIASOGCFEATURES_H__9F3B6E5D_A8BB_4411_91DC_36648CC47766__INCLUDED_)
#define _TRIASOGCFEATURES_H__9F3B6E5D_A8BB_4411_91DC_36648CC47766__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include "resource.h"       // main symbols

// Header include diagnostics
#if defined(_TRIAS_DBG_HEADER_DIAGNOSTICS)
#pragma message(__TIME__": include " __FILE__ )
#endif

/////////////////////////////////////////////////////////////////////////////
// CTRiASOGCFeatures
class ATL_NO_VTABLE CTRiASOGCFeatures : 
	public CComObjectRootEx<CComObjectThreadModel>,
	public CComCoClass<CTRiASOGCFeatures, &CLSID_TRiASOGCFeatures>,
	public CErrSupport<CTRiASOGCFeatures, &IID_ITRiASFeatures>,
	public ITRiASFeaturesCallback
{
public:
	CTRiASOGCFeatures()
	{
	}

	_ATLX_DEBUG_OBJECTCOUNT_IMPL(CTRiASOGCFeatures)

	DECLARE_ONE_SIZE_PRIVATE_HEAP2(CTRiASOGCFeatures);
	DECLARE_REGISTRY_RESOURCEID(IDR_TRIASOGCFEATURES_RGS)

	DECLARE_AGGREGATE_EX_SUPPORT();
	BEGIN_COM_MAP(CTRiASOGCFeatures)
		COM_INTERFACE_ENTRY(ITRiASFeaturesCallback)
		COM_INTERFACE_ENTRY(ISupportErrorInfo)

	// durch aggregiertes Objekt implementierte Interfaces
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_ITRiASFeatures, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_ITRiASBase, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_IDispatch, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_BLIND(m_BaseUnk.p)		// alles andere nicht gesondert behandeln
	END_COM_MAP()

	DECLARE_GET_CONTROLLING_UNKNOWN()
	DECLARE_PROTECT_FINAL_CONSTRUCT()
	HRESULT FinalConstruct()
	{
		RETURN_FAILED_HRESULT(m_BaseUnk.CreateInstance (CLSID_TRiASFeatures, CLSCTX_ALL, GetControllingUnknown()));

	WTRiASFeatures BaseObjs;

		RETURN_FAILED_HRESULT(m_BaseUnk -> QueryInterface(BaseObjs.ppi()));
		return BaseObjs -> putref_FeaturesCallback(this);
	}
	void FinalRelease (void)
	{
		m_BaseUnk.Assign(NULL);
	}

// ISupportsErrorInfo
	STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid);

// ITRiASFeaturesCallback
public:
	STDMETHOD(get_DefaultType)(BSTR *pbstrType);
	STDMETHOD(SetupFeatures)(IDispatch *pIParent, SETUPFEATURESMODE rgSetupMode);
	STDMETHOD(OnCreate)(VARIANT NameOrHandle, BSTR Type, FEATURETYPE rgType, ITRiASFeature **ppIFeat);
	STDMETHOD(OnDelete)(VARIANT vWhich);
	STDMETHOD(OnChanging)(CHANGEDFEATURES rgWhat, VARIANT vNewValue, VARIANT_BOOL *pDisAllow);
	STDMETHOD(OnChanged)(CHANGEDFEATURES rgWhat, VARIANT vOldValue);
	STDMETHOD(OnFinalRelease)();

// BEGIN_SAMPLE_CODE
protected:
	HRESULT SetupFeature (IDispatch *pIParent, ITRiASFeatures *pIBaseFeat, const int iFeatDesc);
// END_SAMPLEDATA

private:
	WUnknown m_BaseUnk;				// aggregiertes Objekt (TRiASFeatures)
};

#endif // !defined(_TRIASOGCFEATURES_H__9F3B6E5D_A8BB_4411_91DC_36648CC47766__INCLUDED_)
