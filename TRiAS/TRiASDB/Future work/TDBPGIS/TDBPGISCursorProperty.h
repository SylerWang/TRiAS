// $Header: $
// Copyright© 1998-2002 GEOPunkt GmbH & Co. KG, NL Potsdam, All rights reserved
// Created: 25.02.2002 16:45:45 
//
// This file was generated by the TRiASDB Data Server Wizard V1.02.117 (#HK010502)
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR 
// PURPOSE.
//
// @doc
// @module TDBPGISCursorProperty.h | Declaration of the <c CTDBPGISCursorProperty> class

#if !defined(_TDBPGISCURSORPROPERTY_H__17DA1EBC_4068_4F56_A2D6_639CC1B6B45A__INCLUDED_)
#define _TDBPGISCURSORPROPERTY_H__17DA1EBC_4068_4F56_A2D6_639CC1B6B45A__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

// Header include diagnostics
#if defined(_TRIAS_DBG_HEADER_DIAGNOSTICS)
#pragma message(__TIME__": include " __FILE__ )
#endif

#include "resource.h"       // main symbols

/////////////////////////////////////////////////////////////////////////////
// CTDBPGISCursorProperty
class ATL_NO_VTABLE CTDBPGISCursorProperty : 
	public CComObjectRootEx<CComObjectThreadModel>,
	public CComCoClass<CTDBPGISCursorProperty, &CLSID_TDBPGISCursorProperty>,
	public ITRiASPropertyCallback,
	public IObjectWithSite,
	public IObjectWithName
{
public:
	CTDBPGISCursorProperty()
	{
	}

	_ATLX_DEBUG_OBJECTCOUNT_IMPL(CTDBPGISCursorProperty)

	DECLARE_REGISTRY_RESOURCEID(IDR_TDBPGISCURSORPROPERTY_RGS)
	DECLARE_NOT_AGGREGATABLE(CTDBPGISCursorProperty)

	BEGIN_COM_MAP(CTDBPGISCursorProperty)
		COM_INTERFACE_ENTRY(ITRiASPropertyCallback)
		COM_INTERFACE_ENTRY(IObjectWithSite)
		COM_INTERFACE_ENTRY(IObjectWithName)
	END_COM_MAP()

	HRESULT FinalConstruct()
	{
		return S_OK;
	}
	void FinalRelease();

// ITRiASPropertyCallback
public:
	STDMETHOD(PutValue)(BSTR Name, VARIANT newVal);
	STDMETHOD(GetValue)(BSTR Name, VARIANT *pVal);
	STDMETHOD(PutType)(BSTR Name, PROPERTY_TYPE newVal);
	STDMETHOD(GetType)(BSTR Name, PROPERTY_TYPE *pVal);
	STDMETHOD(GetValueAndType)(BSTR Name, VARIANT *pVal, PROPERTY_TYPE *pType);
	STDMETHOD(PutValueAndType)(BSTR Name, VARIANT Val, PROPERTY_TYPE Type);
	STDMETHOD(Refresh)(BSTR Name);

// IObjectWithSite
	STDMETHOD(SetSite)(IUnknown *pISite);
	STDMETHOD(GetSite)(REFIID riid, void **ppvSite);

// IObjectWithName
	STDMETHOD(put_Name)(BSTR bstrName);
	STDMETHOD(get_Name)(BSTR *pbstrName);

protected:
	HRESULT GetCursorMap (ITRiASObjectHandleMap **ppIMap);
	HRESULT SetCursor();
	HRESULT ResetCursor();

private:
	WUnknown m_Obj;			// hängt an diesem Objekt
	CComVariant m_Value;	// Wert des ObjektCursors
	CComBSTR m_bstrName;	// Name der Property
};

#endif // !defined(_TDBPGISCURSORPROPERTY_H__17DA1EBC_4068_4F56_A2D6_639CC1B6B45A__INCLUDED_)
