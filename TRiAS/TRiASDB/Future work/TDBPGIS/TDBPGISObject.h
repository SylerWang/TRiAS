// $Header: $
// Copyright© 1998-2002 GEOPunkt GmbH & Co. KG, NL Potsdam, All rights reserved
// Created: 25.02.2002 16:45:45 
//
// This file was generated by the TRiASDB Data Server Wizard V1.02.117 (#HK010502)
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR 
// PURPOSE.
//
// @doc
// @module TDBPGISObject.h | Declaration of the <c CTDBPGISObject> class

#if !defined(_TDBPGISOBJECT_H__4464C2AE_13F1_403C_9238_BF411E094728__INCLUDED_)
#define _TDBPGISOBJECT_H__4464C2AE_13F1_403C_9238_BF411E094728__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

// Header include diagnostics
#if defined(_TRIAS_DBG_HEADER_DIAGNOSTICS)
#pragma message(__TIME__": include " __FILE__ )
#endif

#include "resource.h"       // main symbols

/////////////////////////////////////////////////////////////////////////////
// CTDBPGISObject
class ATL_NO_VTABLE CTDBPGISObject : 
	public CComObjectRootEx<CComObjectThreadModel>,
	public CComCoClass<CTDBPGISObject, &CLSID_TDBPGISObject>,
	public CErrSupport<CTDBPGISObject, &IID_ITRiASObject>,
	public ITRiASObjectCallback
{
public:
	CTDBPGISObject() :
		m_fHasFeatures(false), m_fHasGeoFeatures(false)
	{
	}

	_ATLX_DEBUG_OBJECTCOUNT_IMPL(CTDBPGISObject)

	DECLARE_REGISTRY_RESOURCEID(IDR_TDBPGISOBJECT_RGS)
	DECLARE_AGGREGATE_EX_SUPPORT();

	BEGIN_COM_MAP(CTDBPGISObject)
		COM_INTERFACE_ENTRY(ITRiASObjectCallback)
		COM_INTERFACE_ENTRY(ISupportErrorInfo)

	// durch aggregiertes Objekt implementierte Interfaces
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_ITRiASObject, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_ITRiASBase, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_IDispatch, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_IConnectionPointContainer, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_BLIND(m_BaseUnk.p)		// alles andere nicht gesondert behandeln
	END_COM_MAP()

	DECLARE_GET_CONTROLLING_UNKNOWN()
	DECLARE_PROTECT_FINAL_CONSTRUCT()
	HRESULT FinalConstruct()
	{
		RETURN_FAILED_HRESULT(m_BaseUnk.CreateInstance (CLSID_TRiASObject, CLSCTX_ALL, GetControllingUnknown()));

	WTRiASObject BaseObj;

		RETURN_FAILED_HRESULT(m_BaseUnk -> QueryInterface(BaseObj.ppi()));
		return BaseObj -> putref_ObjectCallback(this);
	}
	void FinalRelease (void)
	{
		m_BaseUnk.Assign(NULL);
	}

// ISupportsErrorInfo
	STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid);

// ITRiASObjectCallback
	STDMETHOD(get_DefaultType)(BSTR *pbstrType);
	STDMETHOD(SetupObject)(SETUPOBJECTMODE rgMode);
	STDMETHOD(SetupFeatures)(SETUPFEATURESMODE rgMode);
	STDMETHOD(OnDelete)();
	STDMETHOD(OnChanging)(CHANGEDOBJECT rgWhat, VARIANT vNewValue, VARIANT_BOOL *pDisAllow);
	STDMETHOD(OnChanged)(CHANGEDOBJECT rgWhat, VARIANT vOldValue);
	STDMETHOD(OnFinalRelease)();

private:
	bool m_fHasFeatures;
	bool m_fHasGeoFeatures;

	WUnknown m_BaseUnk;					// aggregiertes Objekt
};

#endif // !defined(_TDBPGISOBJECT_H__4464C2AE_13F1_403C_9238_BF411E094728__INCLUDED_)
