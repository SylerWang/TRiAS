// $Header: $
// Copyright© 1998-$$year$$ $$company$$, All rights reserved
// Created: $$date_n_time$$ 
//
// This file was generated by the TRiASDB Data Server Wizard $$this_version$$
//
$$IF(EMIT_WARRANTIES)
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR 
// PURPOSE.
//
$$ENDIF // EMIT_WARRANTIES
// @doc
// @module $$root$$App.h | Declaration of the <c C$$Safe_root$$App> class

#if !defined(_$$SAFE_ROOT$$APP_H__A62C679B_D70A_4349_B3A7_5FA48D19DE26__INCLUDED_)
#define _$$SAFE_ROOT$$APP_H__A62C679B_D70A_4349_B3A7_5FA48D19DE26__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

// Header include diagnostics
#if defined(_TRIAS_DBG_HEADER_DIAGNOSTICS)
#pragma message(__TIME__": include " __FILE__ )
#endif

#include <WinVersion.h>

#if defined(_MFC_VER)
class C$$Safe_root$$App : 
	public CWinApp
{
public:

// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(C$$Safe_root$$App)
	public:
    virtual BOOL InitInstance();
    virtual int ExitInstance();
	//}}AFX_VIRTUAL

	//{{AFX_MSG(C$$Safe_root$$App)
		// NOTE - the ClassWizard will add and remove member functions here.
		//    DO NOT EDIT what you see in these blocks of generated code !
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP()

public:
	bool IsWin31 (void) { return m_Version.IsWin31(); }
	bool IsWin40 (void) { return m_Version.IsWin40(); }
	bool IsWin41 (void) { return m_Version.IsWin41(); }
	bool IsWin50 (void) { return m_Version.IsWin50(); }
	bool IsWin32s (void) { return m_Version.IsWin32s(); }
	bool IsWinNT (void) { return m_Version.IsWinNT(); }

private:
	CWinVersion m_Version;
};

extern C$$Safe_root$$App theApp;

///////////////////////////////////////////////////////////////////////////////
// WindowsVersion
bool IsWin31 (void) { return theApp.IsWin31(); }
bool IsWin40 (void) { return theApp.IsWin40(); }
bool IsWin41 (void) { return theApp.IsWin41(); }
bool IsWin50 (void) { return theApp.IsWin50(); }
bool IsWin32s (void) { return theApp.IsWin32s(); }
bool IsWinNT (void) { return theApp.IsWinNT(); }

#else

///////////////////////////////////////////////////////////////////////////////
// no MFC at all
CWinVersion g_Version;

///////////////////////////////////////////////////////////////////////////////
// WindowsVersion
bool IsWin31 (void) { return g_Version.IsWin31(); }
bool IsWin40 (void) { return g_Version.IsWin40(); }
bool IsWin41 (void) { return g_Version.IsWin41(); }
bool IsWin50 (void) { return g_Version.IsWin50(); }
bool IsWin32s (void) { return g_Version.IsWin32s(); }
bool IsWinNT (void) { return g_Version.IsWinNT(); }

#endif // defined(_MFC_VER)

#endif // !defined(_$$SAFE_ROOT$$APP_H__A62C679B_D70A_4349_B3A7_5FA48D19DE26__INCLUDED_)
