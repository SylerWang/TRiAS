// $Header: $
// Copyright© 1998-$$year$$ $$company$$, All rights reserved
// Created: $$date_n_time$$ 
//
// This file was generated by the TRiASDB Data Server Wizard $$this_version$$
//
$$IF(EMIT_WARRANTIES)
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR 
// PURPOSE.
//
$$ENDIF // EMIT_WARRANTIES
// @doc
// @module $$root$$Object.h | Declaration of the <c C$$safe_root$$Object> class

#if !defined(_$$SAFE_ROOT$$OBJECT_H__$$GUID_OBJECT_H$$__INCLUDED_)
#define _$$SAFE_ROOT$$OBJECT_H__$$GUID_OBJECT_H$$__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

// Header include diagnostics
#if defined(_TRIAS_DBG_HEADER_DIAGNOSTICS)
#pragma message(__TIME__": include " __FILE__ )
#endif

#include "resource.h"       // main symbols

/////////////////////////////////////////////////////////////////////////////
// C$$safe_root$$Object
class ATL_NO_VTABLE C$$safe_root$$Object : 
	public CComObjectRootEx<CComObjectThreadModel>,
	public CComCoClass<C$$safe_root$$Object, &CLSID_$$safe_root$$Object>,
	public CErrSupport<C$$safe_root$$Object, &IID_ITRiASObject>,
$$IF(EMIT_PERSISTSTREAM_OBJECT)
	public IPersistStreamInit,
$$ENDIF // IF(EMIT_PERSISTSTREAM_OBJECT)
	public ITRiASObjectCallback
{
public:
	C$$safe_root$$Object() :
$$IF(EMIT_PERSISTSTREAM_OBJECT)
		m_fIsInitialized(false), m_fIsDirty(false),
$$ENDIF // IF(EMIT_PERSISTSTREAM_OBJECT)
		m_fHasFeatures(false), m_fHasGeoFeatures(false)
	{
	}

$$IF(EMIT_OBJECTCOUNT_DEBUG)
	_ATLX_DEBUG_OBJECTCOUNT_IMPL(C$$safe_root$$Object)
$$ENDIF // IF(EMIT_OBJECTCOUNT_DEBUG)

	DECLARE_REGISTRY_RESOURCEID(IDR_$$SAFE_ROOT$$OBJECT_RGS)
	DECLARE_AGGREGATE_EX_SUPPORT();

	BEGIN_COM_MAP(C$$safe_root$$Object)
		COM_INTERFACE_ENTRY(ITRiASObjectCallback)
		COM_INTERFACE_ENTRY(ISupportErrorInfo)
$$IF(EMIT_PERSISTSTREAM_OBJECT)
		COM_INTERFACE_ENTRY(IPersistStreamInit)
		COM_INTERFACE_ENTRY2(IPersistStream, IPersistStreamInit)
		COM_INTERFACE_ENTRY(IPersist)
$$ENDIF // IF(EMIT_PERSISTSTREAM_OBJECT)

	// durch aggregiertes Objekt implementierte Interfaces
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_ITRiASObject, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_ITRiASBase, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_IDispatch, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_EX(IID_IConnectionPointContainer, m_BaseUnk.p)
		COM_INTERFACE_ENTRY_AGGREGATE_BLIND(m_BaseUnk.p)		// alles andere nicht gesondert behandeln
	END_COM_MAP()

	DECLARE_GET_CONTROLLING_UNKNOWN()
	DECLARE_PROTECT_FINAL_CONSTRUCT()
	HRESULT FinalConstruct()
	{
		RETURN_FAILED_HRESULT(m_BaseUnk.CreateInstance (CLSID_TRiASObject, CLSCTX_ALL, GetControllingUnknown()));

	WTRiASObject BaseObj;

		RETURN_FAILED_HRESULT(m_BaseUnk -> QueryInterface(BaseObj.ppi()));
		return BaseObj -> putref_ObjectCallback(this);
	}
	void FinalRelease (void)
	{
		m_BaseUnk.Assign(NULL);
	}

$$IF(EMIT_PERSISTSTREAM_OBJECT)
// IPersist
	STDMETHOD(GetClassID)(CLSID *pClassID);

// IPersistStream
	STDMETHOD(IsDirty)();
	STDMETHOD(Load)(LPSTREAM pStm);
	STDMETHOD(Save)(LPSTREAM pStm, BOOL fClearDirty);
	STDMETHOD(GetSizeMax)(ULARGE_INTEGER *pcbSize);

// IPersistStreamInit
	STDMETHOD(InitNew)();

$$ENDIF // IF(EMIT_PERSISTSTREAM_OBJECT)
// ISupportsErrorInfo
	STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid);

// ITRiASObjectCallback
	STDMETHOD(get_DefaultType)(BSTR *pbstrType);
	STDMETHOD(SetupObject)(SETUPOBJECTMODE rgMode);
	STDMETHOD(SetupFeatures)(SETUPFEATURESMODE rgMode);
	STDMETHOD(OnDelete)();
	STDMETHOD(OnChanging)(CHANGEDOBJECT rgWhat, VARIANT vNewValue, VARIANT_BOOL *pDisAllow);
	STDMETHOD(OnChanged)(CHANGEDOBJECT rgWhat, VARIANT vOldValue);
	STDMETHOD(OnFinalRelease)();

private:
$$IF(EMIT_PERSISTSTREAM_OBJECT)
	bool m_fIsInitialized;
	bool m_fIsDirty;
$$ENDIF // $$IF(EMIT_PERSISTSTREAM_OBJECT)
	bool m_fHasFeatures;
	bool m_fHasGeoFeatures;

	WUnknown m_BaseUnk;					// aggregiertes Objekt
};
$$IF(EMIT_PERSISTSTREAM_OBJECT)

///////////////////////////////////////////////////////////////////////////////
// Versionen des PersistStream-Formates
const long $$SAFE_ROOT$$OBJECT_SIGNATURE = 0x4A424F54L;	// "TOBJ"
const long $$SAFE_ROOT$$OBJECT_VERSION = 0x0100L;
const long LASTKNOWN_$$SAFE_ROOT$$OBJECT_VERSION = $$SAFE_ROOT$$OBJECT_VERSION;
$$ENDIF // IF(EMIT_PERSISTSTREAM_OBJECT)

#endif // !defined(_$$SAFE_ROOT$$OBJECT_H__$$GUID_OBJECT_H$$__INCLUDED_)
