#
# Tag Image File Format Library
#
# Copyright (c) 1988-1995 Sam Leffler
# Copyright (c) 1991-1995 Silicon Graphics, Inc.
# 
# Permission to use, copy, modify, distribute, and sell this software and 
# its documentation for any purpose is hereby granted without fee, provided
# that (i) the above copyright notices and this permission notice appear in
# all copies of the software and related documentation, and (ii) the names of
# Sam Leffler and Silicon Graphics may not be used in any advertising or
# publicity relating to the software without the specific, prior written
# permission of Sam Leffler and Silicon Graphics.
# 
# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
# 
# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
# OF THIS SOFTWARE.
#

!include <ntwin32.mak>


DEPTH	= ..

SRCDIR	= $(DEPTH)\\libtiff
PORT	= $(DEPTH)\\port
JPEGDIR = .   # change if you are including JPEG support

# VERSION:      @VERSION@
# DATE:		@DATE@
# TARGET:	@TARGET@
# CCOMPILER:	@CCOMPILER@
#
SHELL	= cmd
NULL	=
CC	= cl
AR	= lib
LINK    = link
AROPTS	= -nologo $(DLLLINK)
RANLIB	=
INSTALL	= 

#
# If JPEG support is to be included and the Independent JPEG
# Software distribution is not installed then INC_JPEG will
# refer to the directory where the include files reside.
#
IPATH	= -I. -I$(DEPTH) -I$(SRCDIR) 
#
# To enable JPEG support (with the default configuration), include
# -DJPEG_SUPPORT here, setup the include search path above, and
# configure the tools to locate the appropriate libjpeg.  Otherwise,
# consult tiffconf.h for information on controlling the configuration
# of optional library support.
#
COPTS	= -nologo -DBSDTYPES $(DLLOPTS) $(DLLDEFS)

# use /G4 for 486 or /G3 for 386
OPTIMIZER=-O2 /G5

CFLAGS	= $(COPTS) $(OPTIMIZER) $(IPATH) 
#
SRCS	= \
	tif_aux.c \
	tif_close.c \
	tif_codec.c \
	tif_compress.c \
	tif_dir.c \
	tif_dirinfo.c \
	tif_dirread.c \
	tif_dirwrite.c \
	tif_dumpmode.c \
	tif_error.c \
	tif_fax3.c \
	tif_fax3sm.c \
	tif_getimage.c \
	tif_jpeg.c \
	tif_flush.c \
	tif_lzw.c \
	tif_next.c \
	tif_open.c \
	tif_packbits.c \
	tif_predict.c \
	tif_print.c \
	tif_read.c \
	tif_swab.c \
	tif_strip.c \
	tif_thunder.c \
	tif_tile.c \
	tif_win32.c \
	tif_version.c \
	tif_warning.c \
	tif_write.c \
	tif_zip.c \
	$(NULL)
OBJS	= \
	tif_aux.obj \
	tif_close.obj \
	tif_codec.obj \
	tif_compress.obj \
	tif_dir.obj \
	tif_dirinfo.obj \
	tif_dirread.obj \
	tif_dirwrite.obj \
	tif_dumpmode.obj \
	tif_error.obj \
	tif_fax3.obj \
	tif_fax3sm.obj \
	tif_getimage.obj \
	tif_jpeg.obj \
	tif_flush.obj \
	tif_lzw.obj \
	tif_next.obj \
	tif_open.obj \
	tif_packbits.obj \
	tif_predict.obj \
	tif_print.obj \
	tif_read.obj \
	tif_swab.obj \
	tif_strip.obj \
	tif_thunder.obj \
	tif_tile.obj \
	tif_win32.obj \
	tif_version.obj \
	tif_warning.obj \
	tif_write.obj \
	tif_zip.obj \
	$(NULL)
	


TARGETS	= libtiff.lib libctif.dll libgtif.dll

#all:	$(TARGETS)

libtiff.lib: $(OBJS)
	$(AR) $(AROPTS) -out:libtiff.lib $?

libctif.dll: $(OBJS)
	$(LINK) $(AROPTS) -out:libctif.dll $? $(conlibsdll)

libgtif.dll: $(OBJS)
	$(LINK) $(AROPTS) -out:libgtif.dll $? $(guilibsdll)


        
$(OBJS): $(SRCDIR)\\tiffio.h $(SRCDIR)\\tiff.h $(SRCDIR)\\tif_dir.h
$(OBJS): $(SRCDIR)\\tiffcomp.h $(SRCDIR)\\tiffiop.h $(SRCDIR)\\tiffconf.h

tif_fax3.obj: $(SRCDIR)\\t4.h $(SRCDIR)\\tif_fax3.h

#
# NB: can't use these since the software may not be configure
#     for use with JPEG support.  Really need dynamic include
#     file dependency support; but that's too much effort.
#
#tif_jpeg.obj: $(JPEGDIR)\\jpeglib.h $(JPEGDIR)\\jerror.h
tif_lzw.obj: $(SRCDIR)\\tif_predict.h
tif_predict.obj: $(SRCDIR)\\tif_predict.h
tif_zip.obj: $(SRCDIR)\\tif_predict.h
#
# NB: can't use these since the software may not be configure
#     for use with Deflate support.
#
#tif_zip.obj: $(ZIPDIR)\\zlib.h $(ZIPDIR)\\zutil.h

tif_version.obj: 

#
# The finite state machine tables used by the G3\\G4 decoders
# are generated by the mkg3states program.  On systems without
# make these rules have to be manually carried out.
#
tif_fax3sm.c: $(SRCDIR)\\mkg3states.c $(SRCDIR)\\tif_fax3.h
	$(CC) -c $(CFLAGS) $(SRCDIR)\\mkg3states.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\..\\port\\getopt.c
	$(LINK) -nologo -PDB:NONE -out:.\\mkg3states.exe $(SRCDIR)\\mkg3states.obj $(SRCDIR)\\getopt.obj
	del /f /q tif_fax3sm.c
        .\\mkg3states.exe -c const tif_fax3sm.c
	del /f /q getopt.obj

tif_aux.obj: $(SRCDIR)\\tif_aux.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_aux.c
tif_close.obj: $(SRCDIR)\\tif_close.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_close.c
tif_codec.obj: $(SRCDIR)\\tif_codec.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_codec.c
tif_compress.obj: $(SRCDIR)\\tif_compress.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_compress.c
tif_dir.obj: $(SRCDIR)\\tif_dir.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_dir.c
tif_dirinfo.obj: $(SRCDIR)\\tif_dirinfo.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_dirinfo.c
tif_dirread.obj: $(SRCDIR)\\tif_dirread.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_dirread.c
tif_dirwrite.obj: $(SRCDIR)\\tif_dirwrite.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_dirwrite.c
tif_dumpmode.obj: $(SRCDIR)\\tif_dumpmode.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_dumpmode.c
tif_error.obj: $(SRCDIR)\\tif_error.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_error.c
tif_fax3.obj: $(SRCDIR)\\tif_fax3.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_fax3.c
tif_getimage.obj: $(SRCDIR)\\tif_getimage.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_getimage.c
tif_jpeg.obj: $(SRCDIR)\\tif_jpeg.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_jpeg.c
tif_flush.obj: $(SRCDIR)\\tif_flush.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_flush.c
tif_lzw.obj: $(SRCDIR)\\tif_lzw.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_lzw.c
tif_next.obj: $(SRCDIR)\\tif_next.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_next.c
tif_open.obj: $(SRCDIR)\\tif_open.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_open.c
tif_packbits.obj: $(SRCDIR)\\tif_packbits.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_packbits.c
tif_predict.obj: $(SRCDIR)\\tif_predict.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_predict.c
tif_print.obj: $(SRCDIR)\\tif_print.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_print.c
tif_read.obj: $(SRCDIR)\\tif_read.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_read.c
tif_swab.obj: $(SRCDIR)\\tif_swab.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_swab.c
tif_strip.obj: $(SRCDIR)\\tif_strip.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_strip.c
tif_thunder.obj: $(SRCDIR)\\tif_thunder.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_thunder.c
tif_tile.obj: $(SRCDIR)\\tif_tile.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_tile.c
tif_winn32.obj: $(SRCDIR)\\tif_win32.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_win32.c
tif_version.obj: $(SRCDIR)\\tif_version.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_version.c
tif_warning.obj: $(SRCDIR)\\tif_warning.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_warning.c
tif_write.obj: $(SRCDIR)\\tif_write.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_write.c
tif_zip.obj: $(SRCDIR)\\tif_zip.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_zip.c

#tif_apple.obj: $(SRCDIR)\\tif_apple.c
#	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_apple.c
#tif_atari.obj: $(SRCDIR)\\tif_atari.c
#	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_atari.c
#tif_msdos.obj: $(SRCDIR)\\tif_msdos.c
#	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_msdos.c
#tif_vms.obj: $(SRCDIR)\\tif_vms.c
#	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_vms.c
#tif_win3.obj: $(SRCDIR)\\tif_win3.c
#	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_win3.c
#tif_unix.obj: $(SRCDIR)\\tif_unix.c
#	$(CC) -c $(CFLAGS) $(SRCDIR)\\tif_unix.c

clean:
	del /f /q $(TARGETS) $(OBJS) mkg3states.exe tif_fax3sm.c \
	libctif.lib libctif.exp libgtif.lib libgtif.exp

clean_objs:
	del /f /q $(OBJS)
