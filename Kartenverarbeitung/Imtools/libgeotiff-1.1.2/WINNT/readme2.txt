
		 The following text describes how to build
	      LIBTIFF, LIBGEOTIFF, and the sample EXECUTABLES


NOTE: After doing the editing needed in libtiff described below, you can
use the build.bat script in the NT-geotiff directory to build everything.

 "build" builds static, GUI and CONSOLE libs and DLLs, and builds the exe's
         with the static libraries

 "build GUI" builds only the GUI libs, DLL, and links the exe's with them. 

 "build CON" builds only the CON libs, DLL, and links the exe's with them. 





LIBTIFF

* cd to "libtiff".

* "Maketif.vc" is from the NT-geotiff distribution. This makefile has the
  /G5 (optimize for pentium) switch turned on. The library generated will run
  on 486 and 386, but you may change this to /G4 or /G3 if you wish.

* The install script should have renamed tif_win32.c to tif_win32.bak and
  copied a new one in its place.
  
* We need to edit a few of the distributed files. This is typically done by
  the "configure" script, but since we don't have ksh on NT, we need to do it
  by hand.

  - In the "tif_version.c" file, remove the line " #include "version.h" "
    and replace it with " #define VERSION "3.4Beta031" ".

  - For Intel based WindowsNT, in the "tiffconf.h" file, change
    "FILLORDER_MSB2LSB" to "FILLORDER_LSB2MSB" and be sure that
    HOST_BIGENDIAN is defined as 0, not 1.

* Build the static "libtiff.lib" by typing "mktifvc" at a command
  prompt. To build a "GUI" dll, type "mktifvc GUI"; for a "CONSOLE" dll,
  type "mktifvc CON".  To build all three types of libraries, type "mktifvc
  ALL". 

  The command window should scroll as it compiles each file in the
  list.  There are several files that generate warnings - typically
  "Intergral size mismatch, conversion supplied". It may also say "Could
  not find XXX" after a "del /f" statement. Ignore these. A sucessful build
  should not have any warnings or errors after the lib or link command

  -- Files generated by the build:

   *.obj - object files. These should be deleted before building a
           different type of library.  The "mktifvc" batch file does this
           automatically.  If you need to repeatedly build the same
           library over and over (debugging), you may want to skip this
           step by editing the batch file.

   libtiff.lib - static library. this library contains all the libtiff
                 library code.  If you link with this library, you are not
                 using DLLs.

   libctif.lib - import library for the console DLL.  You link with this
                 library if you want to run with the console DLL.

   libgtif.lib - import library for the gui DLL. You link with this library
                 if you want to run with the gui DLL.

   libctif.dll - runtime dll for console applications.  This must be in a
                 directory in your path at runtime.

   libgtif.dll - runtime dll for gui applications. This must be in a
                 directory in your path at runtime.

   *.def - definition files for the exported functions in the DLLs. Do not
           delete. These are necessary if you ever rebuild.  The are
           avalaible in the NTextras directory.

   *.exp - exports file for the DLLs.  These files can be deleted after the
           build. They are regenerated each time you build.


LIBGEOTIFF

* cd to the libgeotiff directory.

* "Makegeo.vc" is from the NT-geotiff distribution. This makefile has the
  /G5 (optimize for pentium) switch turned on. The library generated will
  run on 486 and 386, but you may change this to /G4 or /G3 if you wish.

* Build libgeotiff.lib by typing "mkgeovc" at a command prompt. As in the
  libtiff case, adding "GUI", "CON", or "ALL" as a parameter to this
  command will build GUI dlls, CONSOLE dlls or all of the libs and DLLs
  respectively. 

  The command window should scroll as it compiles each file in the list.
  There are several files that generate warnings - typically "Intergral
  size mismatch, conversion supplied". Ignore these. A sucessful build
  should not have any warnings or errors after the link command.

  -- Files generated by the build:

   *.obj - object files. These should be deleted before building a
           different type of library.  The "mkgeovc" batch file does this
           automatically.  If you need to repeatedly build the same
           library over and over (debugging), you may want to skip this
           step by editing the batch file.

   libgeotiff.lib - static library. this library contains all the libtiff
                    library code.  If you link with this library, you are not
                    using DLLs.

   libgeoc.lib - import library for the console DLL.  You link with this
                 library if you want to run with the console DLL.

   libgeog.lib - import library for the gui DLL. You link with this library
                 if you want to run with the gui DLL.

   libgeoc.dll - runtime dll for console applications.  This must be in a
                 directory in your path at runtime.

   libgeog.dll - runtime dll for gui applications. This must be in a
                 directory in your path at runtime.

   *.def - definition files for the exported functions in the DLLs. Do not
           delete. These are necessary if you ever rebuild.  The are
           avalaible in the NTextras directory.

   *.exp - exports file for the DLLs.  These files can be deleted after the
           build. They are regenerated each time you build.


EXECUTABLES

* cd to the bin directory (libgeotiff\bin)

* "Makeexe.vc" is the makefile from the NT-geotiff distribution. This
  makefile has the /G5 (optimize for pentium) switch turned on. The library
  generated will run on 486 and 386, but you may change this to /G4 or /G3
  if you wish. 

* Build the statically linked executables by typing "mkexevc" at a command
  prompt. As in the libtiff case, adding "GUI" or "CON" as a parameter to
  this command will build GUI dll base exe's or CONSOLE dll based exe's
  respectively.  NOTE: Only one kind of exe at a time can be generated.

  The command window should scroll as it compiles each file in the list.
  There may be files that generate warnings - typically "Intergral
  size mismatch, conversion supplied". Ignore these. A sucessful build
  should not have any warnings or errors after the link command.

  -- Files generated by the build:

   *.obj - object files. These should be deleted before building a
           different type of library.  The "mkgeovc" batch file does this
           automatically.  If you need to repeatedly build the same
           library over and over (debugging), you may want to skip this
           step by editing the batch file.

   *.exe - These are the executables.  You should either copy the necessary
           runtime dlls to this directory, or put the dlls in a directory
	   that is in your path before attempting to run them.

