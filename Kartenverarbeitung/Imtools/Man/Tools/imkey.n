'\"et
.de Cb		\" Courier Begin
.in +0.25i
.ft CW
\s-1
.nf
..
.de Ce		\" Courier End
.ft R
.fi
\s+1
.in -0.25i
..
.if t .TH IMKEY 1IM "June 27, 1995" "San Diego Supercomputer Center" "IMAGE TOOLS" 
.if n .TH IMKEY 1IM "June 27, 1995" "SDSC" "IMAGE TOOLS"
.SH NAME
imkey  - keys a foreground image over a background image
.SH SYNOPSIS
\fBimkey\fR [\fIoptions\fR] \fIforeground-filename\fR \fIbackground-filename\fR
\fIoutfilename\fR
.SH DESCRIPTION
\fBimkey\fR imkey places a foreground image over a background image, letting the
background show through wherever the foreground's pixels match a key color
specifified on the command-line.  The resulting image is stored to an output
file.  Input and output files may have different image file formats.
.SH OPTIONS
\fBimkey\fR has a variety of options in the following categories:
.LP
.RS 0.5i
.TS
l l.
File Selection	What input and output files to use
Format Selection	What image file format to use
Format Control	What variant of a file format to generate
Standard	Standard generic options on all SDSC tools
Field(s)	Key color (or other field) selection
Positioning	Position foreground onto background
Subregion	Select a subregion of the foreground
.TE
.RE
.LP
\fIFile Selection\fR, \fIFormat Selection\fR, \fIFormat Control\fR, and
\fIStandard\fR options are common to all SDSC image tools and are
discussed in depth in the \fBman\fP page for \fBimconv\fR(1IM).
.LP
All options can be abbreviated to the first few unique characters.
.SS "Keying"
\fIKeying\fR is a technique that combines pixels of two input images
together to create a third \fIcomposite\fR image.  \fIKeying\fR is commonly
used to take two separately computed images and combine them, with portions
of the foreground made transparent so that the background can show 
through.  In such cases the first input image would act
as a \fIforeground\fR image, and the second as a \fIbackground\fR image.
.LP
Foreground and background images can be composited together to create a variety
of special effects, or as an aid to speed up the rendering of complex
scenery.  For instance, a complex computer-generated robot must walk
across the screen in front of a computer-generated library filled with books.
The library could
be modeled, book by book, and the robot modeled, joint for joint.  An image
showing the robot in the library could be rendered by combining both models
and sending the entire mass of geometry off to the renderer all at once.
A single image would result.
.LP
To render an animation of the robot moving in front of the library one could
send both masses of geometry to the renderer for each frame.  However, the
library is static in this scene and the interaction between the robot and
its books nil.  The time spent rendering, and rerendering, each library book,
frame after frame is a waste and dramatically increases the rendering time
of the animation.
.LP
A more efficient approach would be to render the static library just once,
without the robot.  The robot would then be rendered for each frame, but
without the library behind it (just a solid black background).
Once rendering is
complete, the separate foreground (robot) and background (library) images
can be keyed together to create a series of frames showing the robot
moving in front of the library.  The total rendering time for such an
approach is considerably less. 
.LP
Such compositing tricks are regularly used in Hollywood in order to place
actors in front of locations they aren't in, or to make spaceships fly all
about in front of swirling planets or sparkley star fields.  In video this
same technique is used to place the weather man in
front of a computer-generated weather map.
.LP
In each of these cases, the keying operation must know what portions of
the foreground image to paste over the background image. 
.LP
The net effect is that the foreground image is pasted over the background
image letting the background show through where the foreground's pixels are
satisfied by the keying information.
.LP
.Ce
.RE
.LP
.SS "Field(s)"
Users may choose key off of specific foreground fields using one of the 
following options. 
.LP
.RS 0.5i
.TS
l l.
\fBOption\fR	\fBKey foreground off of...\fR
_
\fB-mono\fR	the monochrome field
\fB-index\fR	the color index field
_
\fB-red\fR	the red field
\fB-green\fR	the green field
\fB-blue\fR	the blue field
_
\fB-hue\fR	on the virtual hue field
\fB-saturation\fR	on the virtual saturation field
\fB-intensity\fR	on the virtual intensity field
.TE
.RE
.LP
In general, a key field named by any of the above options must exist
in both input images.  For instance, keying using \fB-index\fR for color
index fields doesn't make sense on RGB images.  A certain amount of automatic
image type conversion is performed by \fBimkey\fR in order to make things
a little bit more flexible:
.LP
.IP "\fB-mono\fR"
Monochrome keying requires that both input images have monochrome
image fields.
.IP "\fB-index\fR"
Color index keying requires that both input images have color index
image fields.
.IP "\fB-red, \fB-green\fR, \fB-blue\fR"
Keying on red, green, or blue fields works for any image, whether
monochrome, grayscale, color indexed, or RGB.  Such images are promoted
internally to RGB images in order to accomplish the keying.
.IP "\fB-hue\fR, \fB-saturation\fR, \fB-intensity\fR"
Keying on the virtual image fields of hue, saturation, or intensity
works for any image type.  Input image color field values are converted
internally to the HSI color space in order to accomplish the compositing.
.LP
.SS "Positioning"
There also exist provisions for positioning and sizing the foreground image.
This is useful since sometimes only a part of the foreground is desired in the
composite. The positioning of the foreground in respect to the background is
useful if the foreground needs to be somewhere other than the upper left hand
corner of the image, which is the default.
.LP
.RS 0.5i
.TS
l l.
\fB-xposition x\fR	Specify left edge of foreground into background
\fB-yposition y\fR	Specify top edge of foreground into background
.TE
.RE
.IP "\fB-xposition -yposition\fR"
Allows you to position the foreground in the background. The foreground
can be positioned at a new X and Y position other than the default, which is
0 and 0.  Negative values for for X and Y are allowed. This will simply move
the foreground off the left edge and/or the top edge of the background. Those
areas of the foreground that are wide enough and/or long enough will extend
back into the final image.  Quantities are specified in pixels.
.LP
.SS "Subregion"
A subregion of the foreground image may be selected using -xstart, -ystart,
-xsize, and -ysize.  Start values are in pixels measured from (0,0) in the
upper left-hand corner of the foreground image.  Size values are in pixels.
Start values must be positive and size values must result in a subregion
wholely contained within the foreground image.
.LP
.RS 0.5i
.TS
l l.
\fB-xstart x\fR	Specify left edge in foreground data
\fB-ystart y\fR	Specify top edge in foreground data
\fB-xsize width\fR	Specify width of foreground data
\fB-ysize height\fR	Specify height of foreground data
.TE
.RE
.IP "\fB-xstart -ystart\fR"
-xstart and -ystart each default to (0,0) in the foreground image.
-xsize and -ysize each default to the full image width and height from
the starting location to the edge of the foreground image.
.LP
.IP "\fB-xsize -ysize\fR"
A subregion of the foreground image may be selected using -xstart, -ystart,
-xsize, and -ysize.  Start values are in pixels measured from (0,0) in the
upper left-hand corner of the foreground image.  Size values are in pixels.
Start values must be positive and size values must result in a subregion
wholely contained within the foreground image.
.LP
.Ce
.RE
.RE
.SH NOTES
See the NOTES section of \fBimcomp\fR for a description of typical uses of
compositing and notes reguarding the composite operation itself. Since 
\fBimkey\fR uses the same compositing function as \fBimcomp\fR, the text 
written for it will be helpful.
.LP
For notes regarding file format conversion and standard image tool
options, see the \fBman\fP page on \fBimconv\fR(1IM).
.LP
Error messages are reported to \fBstderr\fR.
.SH EXAMPLES
Key one Sun Rasterfile image onto another, only key where the pixels are red
from 20 to 128:
.RS 0.5i
.LP
\fBimkey inone.ras intwo.ras -red 20-128 out.ras\fR
.RE
.LP
Key using green in the range of 30 to 200, and move the foreground image
right by 20 pixels and down by 50:
.RS 0.5i
.LP
\fBimkey inone.ras intwo.ras -red 30-200 -xposition 20 -yposition 50 out.ras\fR
.RE
.LP
Key only using a rectangular sub-region of the foreground. The left-hand
edge of the foreground will start at 10 pixels in from the left 
edge of foreground and will be 30 pixels wide and 40 pixels high against
the background. Key on blue in the range of 0 to 128:
.RS 0.5i
.LP
\fBimkey inone.ras intwo.ras -blue 0-128 -xstart 10 -xsize 30 -ysize 40 out.ras\fR
.RE
.SH "SEE ALSO"
\fBimadjust\fR (1IM),
\fBimcomp\fR (1IM),
\fBimdissolve\fR (1IM),
\fBimfill\fR (1IM),
\fBImVfbAdjust\fR (3IM)
\fBImVfbComp\fR (3IM)
.sp 1
For information on SDSC's image library, see \fBimintro\fR(3IM). 
.SH AUTHORS
Shane Cooper and Dave Nadeau
.br
San Diego Supercomputer Center
.LP
See the individual file format \fBman\fR pages for the authors of the underlying
format read and write code.  The names of these \fBman\fR pages begin
with the letters "im" followed by the format name.
For example, the name of the TIFF \fBman\fR page is \fBimtiff\fR.
To display it, enter \fBman imtiff\fR.
.SH CONTACT
SDSC consultants, (619)534-5100, \fBconsult@y1.sdsc.edu\fR
.br
