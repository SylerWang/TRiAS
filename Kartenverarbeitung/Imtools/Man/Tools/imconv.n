'\"et
.if t .TH IMCONV 1IM "June 27, 1995" "San Diego Supercomputer Center" "IMAGE TOOLS" 
.if n .TH IMCONV 1IM "June 27, 1995" "SDSC" "IMAGE TOOLS"
.SH NAME
imconv  -  Convert between image file formats
.SH SYNOPSIS
\fBimconv\fR [\fIoptions\fR] \fIinfilename\fR \fIoutfilename\fR
.SH DESCRIPTION
With no recognized standard, most commercially available
image-handling applications use their own custom image file format to
store pixel data.  To use imagery generated by one application as 
input into another is complicated by the need to convert from one
custom file format to another. 
.LP
The SDSC image tools are tools developed at the
San Diego Supercomputer Center (SDSC) to handle image manipulation and
file format conversion for a wide range of file formats.
.LP
\fBimconv\fR converts an input image file with one format
to an output image file with a different format.  If the input file
contains multiple images, so will the output file, if its format can
support it.
.SH OPTIONS
\fBimconv\fR has a variety of options in the following six categories:
.LP
.if t .in +0.5i
.if n .in +5
.TS
l l.
File Selection	Which input and output file to use
File Compression	How the input and output file are compressed
Format Selection	Which format to use for the input and output file
Format Control	Which variant of format to use for the output file
Miscellaneous	Other methods of altering the input or output file
Standard	Standard generic options on all SDSC tools
.TE
.if t .in -0.5i
.if n .in -5
.LP
These categories are discussed separately below.
.LP
Any option which affects the input file begins with the prefix "-in".
Any option which affects the output file begins with the prefix "-out".
.LP
All options can be abbreviated to the first few unique characters.
.LP
.SS "File Selection Options"
\fBimconv\fR needs to know where to read image information
and where to write it.  So, in its simplest form, it requires only 
the input and output filenames as follows:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv picture.pix newpic.ras\fR
.if t .in -0.5i
.if n .in -5
.LP
\fBimconv\fR assumes the first filename is the input file and the second the
output file.
.LP
You may optionally precede the input and output filenames by \fB-infile\fR,
and \fB-outfile\fR, respectively.
For instance:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv -infile picture.pix -outfile newpic.ras\fR
.if t .in -0.5i
.if n .in -5
.LP
To direct \fBimconv\fR to read from \fBstdin\fR or write to \fBstdout\fR, use a
filename consisting of a single dash (-).
.if t .in +0.5i
.if n .in +5
.sp
.nf
\fBimconv -informat pix - newpic.ras < picture.pix\fR
    or
\fBimconv picture.pix -outformat ras - > newpic.ras\fR
    or
\fBimconv -informat pix - -outformat ras - < picture.pix > newpic.ras\fR
    or
\fBcat picture.pix | imconv -informat pix - -outformat ras - | cat > newpic.ras\fR
.fi
.if t .in -0.5i
.if n .in -5
.LP
When reading from \fBstdin\fR or writing to \fBstdout\fR,
you must indicate the format of the image
file explicitly with options like \fB-informat pix\fR and
\fB-outformat ras\fR above.  These options 
are discussed in more detail in the "Format Selection" section.
.SS "File Compression Options"
Because image files tend to get quite large, it is often desirable
to compress them with a compression program such as \fBcompress\fR
or \fBgzip\fR.  \fBimconv\fR is capable of both compressing and decompressing
files via the following schemes:
.if t .in +0.5i
.if n .in +5
.sp
.TS
l l l.
Suffix	External Program	Scheme Name
_
Z	compress	Lempel-Ziv Encoding
gz	gzip	Gnu Lempel-Ziv Encoding
z	pack	Huffman Encoding
uu	uuencode	ASCII encoding
.TE
.if t .in -0.5i
.if n .in -5
.LP
The list above may be incomplete.  For a complete list, please type:
.if t .in +0.5i
.if n .in +5
\fBimconv -help -infilecompress\fR
.if t .in -0.5i
.if n .in -5
.LP
If you would like to output a compressed file, there are two ways to do
it.  The first way is simply to put the suffix of the compression
scheme on the end of your filename.  The second way is to use the
\fB-outfilecompression\fR flag.  That is,
.if t .in +0.5i
.if n .in +5
	\fBimconv infile.gif outfile.ras.Z\fR
.br
	\fBimconv infile.gif outfile.ras.Z -outfilecompression Z\fR
.br
.if t .in -0.5i
.if n .in -5
will both produce a Sun Rasterfile which is Lempel-Ziv Encoded.
.LP
If the output is stdout, (i.e. the filename is '\-')
then the latter method must be used.
.LP
When reading a compressed file, there are three ways for \fBimconv\fR
to know that the incoming file is compressed.  \fBimconv\fR attempts
to uncompress a file if: 1. the \fB-infilecompression\fR option is used,
2. the file has a magic number corresponding to the magic number for
a compression scheme, or 3. The filename suffix matches one of the
suffixes in the list above.
.LP
That is,
.if t .in +0.5i
.if n .in +5
	\fBimconv infile.gif.uu outfile.ras\fR
.br
	\fBimconv infile.gif.uu -infilecompression Z outfile.ras\fR
.br
.if t .in -0.5i
.if n .in -5
will both attempt to read a uuencoded GIF and store it as a Sun Rasterfile.
.LP
If the input is stdin, (i.e. the filename is '\-'), then the 
\fB-infilecompression\fR option must be used.
.LP
The Image Tools will search for the external programs named above
when doing compression or decompression, by looking in the
environment PATH variable.  For information about installing your
own compression schemes or specifying paths for certain executables,
please refer to the source code in the file imschemes.c, or the installation
documentation.
.SS "Format Selection Options"
\fBimconv\fR supports a wide variety of file formats.
For a complete list of formats please use the \fBimformats\fB
command, or refer to the man page, \fBimintro\fB (3IM).
.LP
For \fBimconv\fR to read or write an image file, it must know which
format it is reading or writing.  
In most cases, \fBimconv\fR can determine your
intent by looking at the input and output filenames.
For instance:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv picture.pix mypic.ras\fR
.if t .in -0.5i
.if n .in -5
.LP
To determine the format of \fBpicture.pix\fR,
\fBimconv\fR opens it and looks at the first
few bytes of the file.  It checks these against a list of "magic numbers"
for various image file formats.
If it finds no match,
\fBimconv\fR extracts the filename suffix (\fB.pix\fR from \fBpicture.pix\fR)
and compares it against a list of known suffixes for supported image 
file formats.
.LP
To determine the format to use for \fBmypic.ras\fR, \fBimconv\fR extracts
the output filename suffix (\fB.ras\fR from \fBmypic.ras\fR) and compares
it against a list of suffixes for supported image file formats. 
.LP
If \fBimconv\fR cannot discern what format to use, it issues
an error message and exits.
.LP
Thus, in the above example, we would read an Alias PIX file and write a Sun
Rasterfile.
.LP
On occasion it is necessary to override \fBimconv\fR's file format assumptions.
To do so, you must specify an explicit format option preceding 
an input or output filename.
For instance:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv -informat pix picture.pix -outformat ras mypic.ras\fR
.sp
.if t .in -0.5i
.if n .in -5
.LP
This is required when reading from \fBstdin\fR or writing to
\fBstdout\fR.
In either case \fBimconv\fR has no filename from which to extract
a filename suffix and, therefore, cannot discern what format to use.  
.LP
As mentioned above, a complete list of file formats is available via
the \fBimformats\fR command.  To obtain extensive information about
each format, use \fBimformats\fR with the \fB-long\fR option, as follows:
.if t .in +0.5i
.if n .in +5
.sp
\fBimformats -long\fR
.sp
.if t .in -0.5i
.if n .in -5
You may also obtain a list of formats by using \fBimconv\fB's flag-specific
help (described below).  Simply type:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv -help -informat\fR
.sp
.if t .in -0.5i
.if n .in -5
.SS "Format Control Options"
Virtually all image file formats have multiple variants.  These variants
have different image depths, different compression schemes, different
RGB image interleave methods, inclusion or exclusion of color lookup
tables (CLTs) and alpha planes, and so on.  In most cases \fBimconv\fR 
picks the correct variant to use when writing the output file.
However, in some cases you may wish to override \fBimconv\fR's
defaults and select a variant explicitly using the following format
control options: 
.LP
\fB-outindex\fR
.br
\fB-outrgb\fR
.if t .in +0.5i
.if n .in +5
.LP 
Output to color index or RGB image, respectively.
.LP
Typically, image pixels are represented as color index (pseudo-color) or
RGB (true-color) values.
.LP
A color index is a small integer (usually 8- or 12-bits)
that indexes into an associated color lookup table (CLT) to get the 
red-green-blue (RGB) color value for a pixel in the image.
A color index image is often refered to as a "pseudo-color" image because
the color for a given pixel is found in the CLT, not in the pixel data
itself. 
.LP
An RGB image stores the red-green-blue (RGB) value for a pixel's color
for every pixel in the image.  There is no associated CLT.  RGB images
are often refered to as "true-color" because the full color
description (RGB value) is stored in each pixel.
.LP
\fB-outindex\fR forces \fBimconv\fR to convert the incoming image to a
color index image before writing it to the output file.  If the output
file format cannot support storing a color index image, then
\fBimconv\fR reports an error and exits.
.LP
\fB-outrgb\fR forces \fBimconv\fR to convert the incoming image to an
RGB image before writing it to the output file.  If the output file
format cannot support storing an RGB image, then \fBimconv\fR reports
an error and exits. 
.LP
By default, if the input file's image is a color index image, \fBimconv\fR
tries to write it out as a color index image.  Similarly, if the input
file's image is an RGB image, \fBimconv\fR tries to write it out as an
RGB image.  If the output format doesn't support what \fBimconv\fR wants,
\fBimconv\fR automatically converts the image to one of the supported
output file format variants.
.if t .in -0.5i
.if n .in -5
.LP
\fB-outchandepth\fR \fInbits\fR
.if t .in +0.5i
.if n .in +5
.LP
Specify output depth.
.LP
Some file formats allow color indexes and RGB values to be stored with
a specific number of "bits-per-channel".  While 8 bits-per-channel is
by far the most common, some formats support 1, 4, 12, 16, 24,
and 32 bits-per-channel. 
.LP
A color index image has 1 channel (the index into the color lookup
table); an RGB image has 3 channels (red, green, and blue).  The
channel depth is the number of bits \fIfor each channel\fP.  So, an RGB
image with an 8-bit channel depth takes 3 * 8 = 24 bits per pixel.  An
RGB image with a 24-bit channel depth takes 3 * 24 = 72 bits per pixel.
.LP
The \fInbits\fR argument to the \fB-outchandepth\fR is the number of
bits to use per channel when writing out the image.  If the output
file format cannot support the number of bits per channel you specify,
\fBimconv\fR reports an error and exits.
.LP
By default, \fBimconv\fR chooses the best number based on the
number of bits per channel used by the incoming image.  If an input file's
image uses a 16-bit color index, \fBimconv\fR tries to output the image
using a 16-bit, or more, color index.  Truncation occurs only if the
output format cannot support the incoming image's number of bits per
channel, or anything larger.  In fact, in the case of color index images,
if \fBimconv\fR is given the choice of truncating a 16-bit color index
image to 8 bits or converting it to RGB for the same output format,
\fBimconv\fR converts it to RGB.  \fBimconv\fR always chooses the path
with the least degradation of the data.
.if t .in -0.5i
.if n .in -5
.LP
\fB-outnchan\fR \fInchan\fR
.if t .in +0.5i
.if n .in +5
.LP
Select number of output channels.
.LP
The number of channels in an image is the number of values stored per
pixel.  A color index image has 1 channel (the color index into the color lookup
table).  
An RGB
image has 3 channels (red, green, and blue).  
Though channel numbers other than 1 or 3 are possible, in practice they aren't
used.  (We don't count the alpha channel.)
.LP
The \fInchan\fR argument to the \fB-outnchan\fR option selects the number of
channels per pixel (not including the alpha channel) to use when writing the image.
.LP
This option is provided as a path towards future functionality.  In the
present release, this option provides the same information as 
the \fB-outindex\fR and \fB-outrgb\fR options.
.if t .in -0.5i
.if n .in -5
.LP
\fB-outclt\fR
.br
\fB-outnoclt\fR
.if t .in +0.5i
.if n .in +5
.LP
Do or don't output a color lookup table (CLT).
.LP
Color index images usually have a CLT associated with
them.   RGB images can also have them, though less commonly.
.LP
Some image file formats allow the CLT to be left out of the image
file.  The \fB-outnoclt\fR option directs \fBimconv\fR to not write  
the CLT.  The \fB-outclt\fR option directs \fBimconv\fR to 
write the CLT.  
.LP
Some formats require the CLT to be included in the file.  In such cases, 
if you specify 
the \fB-outnoclt\fR option, \fBimconv\fR reports an error and
exits, since it is unable to comply with your request.
.LP
In much rarer cases, some formats do not allow a CLT to be stored in the
image file.  If you specify the \fB-outclt\fR option, \fBimconv\fR reports
an error and exits.
.LP
If the incoming image does not have a CLT but you specify \fB-outclt\fR,
\fBimconv\fR writes a ramping CLT (low to high).
This is most common when reading in a grayscale image (color index image
without a CLT) and writing out a color image (color index image with a
gray ramp for a CLT).
.LP
By default, if the incoming image has a CLT, \fBimconv\fR attempts to store 
it.  If the output format cannot store a CLT but can store an RGB
image, \fBimconv\fR automatically converts a color index image to an
RGB image and stores it that way.
.if t .in -0.5i
.if n .in -5
.LP
\fB-outalpha\fR
.br
\fB-outnoalpha\fR
.if t .in +0.5i
.if n .in +5
.LP 
Do or don't output an alpha channel.
.LP
An alpha channel
contains a coverage value for each image pixel and 
typically is used when compositing images.  For instance, to make image ABC
partially cover XYZ, parts of ABC are marked as opaque (they cover XYZ),
while other parts are transparent (XYZ shows through).
.LP
Alpha values typically range from 0 to 255. 0 means transparent, 255 opaque. 
Values between 0 and 255 indicate partial transparency and direct
compositing software to mix the color of the image on top with the color of
the image below, using the alpha value as a weighting factor.
.LP
\fB-outalpha\fR directs that an alpha channel be output for the
image.  If \fB-outalpha\fR is given and the output format cannot
support an alpha channel (most cannot),
\fBimconv\fR reports an error and exits.
.LP
\fB-outnoalpha\fR directs that an alpha channel not be output.
If \fB-outnoalpha\fR is given and the output format must have
an alpha channel (rare), \fBimconv\fR 
reports an error and exits.
.LP
If the incoming image does not have an alpha channel but you specify 
\fB-outalpha\fR,
\fBimconv\fR automatically generates an opaque alpha channel (all 255s).
.LP
By default, if the incoming image has an alpha channel, \fBimconv\fR tries
to write it out.  For some 
file formats, only RGB images, not color index images, can be stored with
alpha channels. In such cases, if the incoming
image is a color index image with an alpha channel, \fBimconv\fR 
automatically converts the image to RGB to preserve the alpha channel.
.if t .in -0.5i
.if n .in -5
.LP
\fB-outinterleave\fR \fImethod\fR
.if t .in +0.5i
.if n .in +5
.LP
Specify interleave method.
.LP
This option only applies to RGB images.
.LP
RGB images are written out using one of the following three methods:
.if t .in +0.5i
.if n .in +5
.sp
.TS
l l.
noninterleaved	RGBRGBRGBRGB...
scanline-interleaved	RR..GG..BB..RR..GG..BB...
plane-interleaved	RRRR..GGGG..BBB..
.TE
.if t .in -0.5i
.if n .in -5
.LP
Some formats support all three methods.  Other formats support only one
or two.
The \fB-outinterleave\fR option takes one of the following arguments:
.if t .in +0.5i
.if n .in +5
.sp
.TS
l l.
\fBnone\fR	noninterleaved
\fBline\fR	scanline-interleaved
\fBplane\fR	plane-interleaved
.TE
.if t .in -0.5i
.if n .in -5
.LP
If the output format does not support the interleave method you select,
\fBimconv\fR reports an error and exits.
.LP
By default, \fBimconv\fR chooses the most efficient or
most widely used interleave
method for the output format.  In most cases \fBimconv\fR chooses 
plane-interleaved
over scanline-interleaved, and scanline-interleaved over
noninterleaved.  This is because image compression schemes (see
below) work better on plane- and scanline-interleaved images, thus
reducing the 
amount of disk space an image file requires.
.if t .in -0.5i
.if n .in -5
.LP
\fB-outcompress\fR \fIscheme\fR
.if t .in +0.5i
.if n .in +5
.LP
Specify compression scheme.
.LP
Most image file formats support compression schemes to reduce the size of
a file.  Some formats even support multiple compression schemes.
.LP
The single argument to the \fB-outcompress\fR option is the name
of the compression scheme to use:
.if t .in +0.5i
.if n .in +5
.sp
.TS
l l.
\fBnone\fR	noncompressed
\fBlzw\fR	Limpel-Ziv & Welsh compressed
\fBpb, packbits, mac\fR	Apple Macintosh Packbits
\fBrle\fR	Run-Length-Encoded
.TE
.if t .in -0.5i
.if n .in -5
.LP
Noncompressed images store each image pixel as a value or values in
the file.  No tricks are applied to reduce the disk space
requirements.  Noncompressed image files take longer to write out and
read in, and they use up more disk space (often several times as much as a
wellcompressed image). 
.LP
Compression schemes use trickery to reduce the storage requirements of the
image.  The most common among these is Run-Length Encoding (RLE).  RLE
is based on the fact that most images have runs of adjacent pixels of
the same color, such as solid color image backgrounds.  These runs can
be abbreviated to just a count of the number of pixels in the run, and
the color to use for the run.  Runlength-encoded images usually take
30-50% less disk space. 
.LP
Most image formats support some 
variant of RLE compression.  Since these variants are
similar, \fBimconv\fR refers to them all as "rle compression."
.LP
Limpel-Ziv & Welsh and Apple's Packbits compression are
fancier and too complex to explain here.
.LP
If the output format does not support the form of compression you select
with the \fB-outcompress\fR option, \fBimconv\fR reports an error and exits.
.LP
By default, \fBimconv\fR chooses the most efficient
or most widely used compression
scheme supported by the output file format.
.if t .in -0.5i
.if n .in -5
.LP
Most image file formats only support a subset of the functionality represented
by \fBimconv\fR's options.  In rare cases, the format may support the
functionality, but \fBimconv\fR does not.  For a list of what is 
supported, enter \fBimformats\fR(1IM) with the \fB-long\fR option, as follows:
.if t .in +0.5i
.if n .in +5
.sp
\fBimformats -long\fR
.if t .in -0.5i
.if n .in -5
.LP
For greater detail, you may specify the \fB-long\fR option twice, as
follows:
.if t .in +0.5i
.if n .in +5
.sp
\fBimformats -long -long\fR
.if t .in -0.5i
.if n .in -5
.SS "Miscellaneous Options"
Following are a list of options which affect how a file is read or
how a file is written.  Options which begin with "\-in" affect 
reading of a file.  Options which begin with "\-out" affect writing
of a file.
.if t .in +0.5i
.if n .in +5
.sp
\fB-inmap channel_map\fR
.if t .in +0.5i
.if n .in +5
The \fB-inmap\fR option allows you to permute the channels of an image
when reading it in.  A channel_map is of the 
form <channel>=<channel>
where <channel> is one of the following:
.if t .in +0.5i
.if n .in +5
red, green, blue, alpha, grey, index, index16, none
.if t .in -0.5i
.if n .in -5
This option will take a channel from the image and map it to a different
channel in memory.  Here are some examples of how to use the \fB-inmap\fR
option:
.sp
Given an image with red, green, blue, and alpha, create a new image such that:
the alpha of the new image is the green of the original, the blue of the
new image is the green of the original, the red of the new image is the
alpha of the original, and there is no green in the new image:
.if t .in +0.5i
.if n .in +5
\fBimconv picture.rgb permuted.rgb -inmap alpha=green -inmap blue=green
\-inmap red=alpha -inmap green=none\fR
.if t .in -0.5i
.if n .in -5
Given a greyscale picture, make an image which is red instead of grey:
.if t .in +0.5i
.if n .in +5
\fBimconv greyscale.ras red.rgb -inmap red=grey -inmap blue=none -inmap green=none\fR
.if t .in -0.5i
.if n .in -5
Only read in the blue channel of an image, and ignore the red and green channels:
.if t .in +0.5i
.if n .in +5
\fBimconv colors.rgb -inmap red=none -inmap green=none justblue.rgb\fR
.if t .in -0.5i
.if n .in -5
To perform more specific options on components of pixels, you may use the \fBimadjust\fR command.
.if t .in -0.5i
.if n .in -5
.sp
\fB-outmap channel_map\fR
.if t .in +0.5i
.if n .in +5
The \fB-outmap\fR option allows you to permute the channels of an image
when writing it out.  A channel_map is of the 
form <channel>=<channel>
where <channel> is one of the following:
.if t .in +0.5i
.if n .in +5
red, green, blue, alpha, grey, index, index16, none
.if t .in -0.5i
.if n .in -5
This option will take a channel from the image in memory and map it to a 
different channel in the output file.  
.sp
For instance, to create a greyscale file whose grey values 
correspond to the alpha values of
another file type:
.if t .in +0.5i
.if n .in +5
\fBimconv i_have_alpha.rgb greyscale.ras -outmap grey=alpha\fR
.if t .in -0.5i
.if n .in -5
To perform more specific options on components of pixels, you may use the \fBimadjust\fR command.
.if t .in -0.5i
.if n .in -5
.sp
\fB-outtransparencyrgb red green blue\fR
.br
\fB-outtransparencyindex index\fR
.br
\fB-outtransparency\fR
.if t .in +0.5i
.if n .in +5
These options affect certain types of color indexed images, such as
GIF and XPM.  The transparency value of an image is an index into the color
lookup table which corresponds to a "transparent" color.
For instance, XPM files are used as icons.  By giving a transparency
value, the background will show through wherever there are pixels with this
value.  When Mosaic or Netscape displays a GIF, the background will
similarly show through wherever the transparency pixel occurs.
.sp
The \fB-outtransparency\fR option indicates that the most popular
color in the image should be the transparency.  The \fB-outtransparencyrgb\fR
flag indicates that pixels with the given red, green, and blue values should
be transparent.  The \fB-outtransparencyindex\fR flag indicates that pixels
with the given index value should be transparent.
.if t .in -0.5i
.if n .in -5
.sp
\fB-inpagewidth\fR
.br
\fB-inpageheight\fR
.br
\fB-indpi\fR
.if t .in +0.5i
.if n .in +5
These options are used for formats that have no predefined width
and height.  Since the only such format supported by the SDSC
Image Library is Postscript, please refer to the man page,
\fBimps\fR (3IM) for a description of these options.
.if t .in -0.5i
.if n .in -5
.sp
\fB-outgroup grouping_method\fR
.if t .in +0.5i
.if n .in +5
Some file formats (such as TIFF and JPEG) allow grouping of pixels by
tiles instead of by scanlines.  That is, normally the pixels in an 
image are stored in the form: row 1, row 2, row 3, etc..  However,
certain compression schemes prefer that that the pixels be grouped into
rectangular tiles.  Then pixels are stored in the form: tile 1, tile 2,
tile 3, etc...
.sp
By using the \fB-outgroup scanlines\fR option, you indicate the former
method of storage.  The \fB-outgroup tiles\fR option indicates the latter.
.if t .in -0.5i
.if n .in -5
.sp
\fB-outquality value\fR
.if t .in +0.5i
.if n .in +5
This option affects the quality of compression for certain compression
schemes.  There is often a tradeoff between the amount of compression 
and the quality of the resulting image.  (And also the amound of time
it takes to decompress or compress an image.)  By specifying a high
value for the quality, you indicate that you'd like the quality to
be preserved.  If you choose to make your image higher quality then
the image will probably take up more disk space.  The only format
that supports the \fB-outquality\fR option is JPEG.  
.if t .in -0.5i
.if n .in -5
.if t .in -0.5i
.if n .in -5
.SS "Standard Options"
\fBimconv\fR recognizes the following standard SDSC options:
.LP
\fB-feedback\fR
.if t .in +0.5i
.if n .in +5
Create a software feedback (bug report) form in the file \fBimconv\fB.fbk.0\fR.
.if t .in -0.5i
.if n .in -5
.LP
\fB-fullhelp\fR
.if t .in +0.5i
.if n .in +5
Display a detailed list of the arguments and how to use \fBimconv\fR.
.if t .in -0.5i
.if n .in -5
.LP
\fB-help\fR
.if t .in +0.5i
.if n .in +5
Display an abbreviated list of the arguments and how to use \fBimconv\fR.
If this option is followed by any other options, then specific help
will be given for the other options.  For instance,
.if t .in +0.5i
.if n .in +5
\fBimconv -help -inmap\fR
.if t .in -0.5i
.if n .in -5
.br
will give help about the \fB-inmap\fR option.
.if t .in -0.5i
.if n .in -5
.LP
\fB-register\fR
.if t .in +0.5i
.if n .in +5
Create a software user registration form in the file \fBimconv\fB.reg.0\fR.
.if t .in -0.5i
.if n .in -5
.LP
\fB-verbose\fR
.if t .in +0.5i
.if n .in +5
Display progress messages to \fBstdout\fR during the course of the
image file conversion.
.if t .in -0.5i
.if n .in -5
.LP
\fB-version\fR
.if t .in +0.5i
.if n .in +5
Display the version number and copyright for \fBimconv\fR.
.if t .in -0.5i
.if n .in -5
.SH NOTES
Error messages are reported to \fBstderr\fR.
.LP
The conversions take varying lengths of time depending upon the complexity
of the input and output file formats and the complexity of the image itself.
.LP
Some file formats create a temporary file in \fB/usr/tmp\fR when reading
from \fBstdin\fR or writing to \fBstdout\fR.
.LP
Some file formats, such as PostScript, cannot be used for input.
.LP
Typically, you don't need to use 
the various channel depth, interleave method, and compression
scheme options.  \fBimconv\fR does a good job of figuring out
how to get the input file's image stored into the output file with a minimum
loss of information, if any at all.  If anything, \fBimconv\fR is overly 
zealous about avoiding loss of information.  Consider this scenario:  
An input file contains a color index image 
with a CLT.  The selected output format supports
both color index (with or without CLT) and RGB images.  The user enters the
following command line:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv input.ras -outnoclt output.hdf\fR
.if t .in -0.5i
.if n .in -5
.LP
What type of image is stored in \fBoutput.hdf\fR?  The answer:  An RGB image,
even though the incoming image was a color index image!
.LP
The intent of the user typing in the above command might be
to strip off the CLT and write
the color index image to the output file.  However, \fBimconv\fR interprets
the \fB-outnoclt\fR option literally.  \fB-outnoclt\fR means a CLT
should not be output.  But it gives no information 
about how image pixels should be
stored.  To avoid
loss of information yet satisfy the user's request, \fBimconv\fR's only recourse
is to convert the image to RGB.
.LP
To strip off the CLT but preserve the image as a
color index image, enter the following command line instead:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv input.ras -outindex -outnoclt output.hdf\fR
.if t .in -0.5i
.if n .in -5
.SH EXAMPLES
To convert an Alias \fBpix\fR file to an \fBhdf\fR file, enter any of the following
command lines:
.if t .in +0.5i
.if n .in +5
.LP
.nf
\fBimconv picture.pix picture.hdf\fR
    or
\fBimconv -informat pix picture.pix -outformat hdf picture.hdf\fR
    or
\fBimconv -informat pix - picture.hdf < picture.pix\fR
    or
\fBimconv -informat pix picture.pix -outformat hdf - > picture.hdf\fR
    or
\fBimconv -informat pix - -outformat hdf - < picture.pix > picture.hdf\fR
    or
\fBcat picture.pix | imconv -informat pix - -outformat hdf - | cat > picture.hdf\fR
.fi
.if t .in -0.5i
.if n .in -5
.LP
To convert an RGB image stored in a \fBpix\fR format file to an RGB image stored
in a \fBras\fR format file, enter the following:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv truecolor.pix truecolor.ras\fR
.if t .in -0.5i
.if n .in -5
.LP
To convert the same RGB \fBpix\fR file image to an 8-bit-per-channel color
index image in a \fBras\fR file, enter any of the following:
.if t .in +0.5i
.if n .in +5
.sp
.nf
\fBimconv truecolor.pix -outindex -outchandepth 8 -outnchan 1 pseudocolor.ras\fR
    or
\fBimconv truecolor.pix -outindex -outchandepth 8 pseudocolor.ras\fR
    or
\fBimconv truecolor.pix -outindex pseudocolor.ras\fR
.fi
.if t .in -0.5i
.if n .in -5
.LP
To select Apple Macintosh Packbits compression and plane-interleaved
RGB storage for a \fBtiff\fR file, enter any of the following:
.if t .in +0.5i
.if n .in +5
.sp
.nf
\fBimconv picture.pix -outcomp pb -outinter plane picture.tiff\fR
    or
\fBimconv picture.pix -outcomp packbits -outinter plane picture.tiff\fR
    or
\fBimconv picture.pix -outcomp mac -outinter plane picture.tiff\fR
.fi
.if t .in -0.5i
.if n .in -5
.LP
To read in an uncompressed Sun Rasterfile and compress it into a new file,
enter the following:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv uncompressed.ras -outcomp rle compressed.ras\fR
.if t .in -0.5i
.if n .in -5
.LP
To convert a Macintosh \fBpict\fR file drawing into an X Window System Bit
Map for use as an icon, cursor, or whatever, enter the following:
.if t .in +0.5i
.if n .in +5
.sp
\fBimconv icon.pict icon.xbm\fR
.if t .in -0.5i
.if n .in -5
.SH "SEE ALSO"
\fBimfile\fR(1IM),
\fBimformats\fR(1IM),
\fBimgray\fR(1IM),
\fBimmono\fR(1IM)
.sp 1
For information on SDSC's image library, see \fBimintro\fR(3IM). 
.SH "KNOWN PROBLEMS"
Different formats use different terminology.  \fBimconv\fR uses generic
terminology.  If you're only familiar with format-specific terms, you may find
\fBimconv\fR confusing.
.LP
\fBimconv\fR supports selection of only the most common
format-specific variants.
For instance, you can't select how GIF 8-bit color index images should
be interlaced when stored (not the same as RGB interleaving).
.LP
When an input file has multiple images in it (such as HDF, GIF, or TIFF files),
the output file format must also support multiple images per file.
SDSC plans to implement tools in the near 
future to create and split multi-image
files.
.SH AUTHOR
Dave Nadeau, Brian Duggan
.br
San Diego Supercomputer Center
.LP
See the individual file format \fBman\fR pages for the authors of the underlying
format read and write code.  The names of these \fBman\fR pages begin
with the letters "im" followed by the format name.
For example, the name of the TIFF \fBman\fR page is \fBimtiff\fR.
To display it, enter \fBman imtiff\fR.
.SH CONTACT
SDSC consultants, (619)534-5100, \fBconsult@y1.sdsc.edu\fR
.br
